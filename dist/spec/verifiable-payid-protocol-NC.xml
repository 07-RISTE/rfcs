<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.10 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC7258 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7258.xml">
<!ENTITY RFC5280 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml">
<!ENTITY RFC6979 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6979.xml">
<!ENTITY RFC8422 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8422.xml">
<!ENTITY RFC7515 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7515.xml">
<!ENTITY RFC7797 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7797.xml">
<!ENTITY RFC7519 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7519.xml">
<!ENTITY RFC4949 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4949.xml">
<!ENTITY RFC7517 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7517.xml">
<!ENTITY RFC4732 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4732.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-aanchal-verifiable-payid-protocol-ext-01" category="std">

  <front>
    <title>Verifiable PayID Protocol Extension</title>

    <author initials="A." surname="Malhotra" fullname="Aanchal Malhotra">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>amalhotra@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="D." surname="Schwartz" fullname="David Schwartz">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>david@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="July" day="30"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines one of the extensions of the verifiable PayID protocol <xref target="VER-PAYID-PROTOCOL"></xref> that aims to enable trust minimized PayID service that has applications in non-custodial settings. More specifically this extension of verifiable PayID protocol eliminates the trust requirement between the PayID owner and their PayID service provider by allowing the non-custodial PayID service providers (wallets and exchanges) to send payment account(s) address information associated with a PayID <xref target="PAYID-URI"></xref> that is digitally signed with the PayID private key of the PayID owner along with PayID owner's <spanx style="verb">identity</spanx> information and other meta-data needed to verify the signature.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a draft proposal, and is part of the
  <eref target="https://payid.org/">PayID Protocol</eref> initiative. Feedback related to this
  document should be sent in the form of a Github issue at:
  https://github.com/payid-org/rfcs/issues.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">
<t>This protocol can be referred to as the <spanx style="verb">Verifiable PayID Protocol Extension for Non-Custodial Services</spanx>. It uses the following terminology.</t>

<t><list style="symbols">
  <t>Endpoint: either the client or the server of the connection.</t>
  <t>Sender: individual or entity originating the transaction.</t>
  <t>PayID client: the endpoint that initiates PayID protocol/sending side of the transaction.</t>
  <t>PayID server: the endpoint that returns payment account(s) information/receiving side of the transaction (non-custodial wallets, exchanges, etc).</t>
  <t>PayID owner: individual or entity receiving the transaction/owner of the PayID<xref target="PAYID-URI"></xref>.</t>
  <t>Digital Signture: As defined in <xref target="RFC4949"></xref>.</t>
</list></t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> and [RFC9174][].</t>

</section>
<section anchor="motivation" title="Motivation">

<t>We anticipate that the most common use-case for retrieving the payment account(s) address information is to make transactions. Providers of such services can be categorized as custodial and non-custodial each of which operate under different security models. Non-custodial wallets and exchanges do not store their customersâ€™ on-ledger private keys on their servers. The customers hold their private keys locally on their device and hence are in full control of their funds. As such, there is no trust requirement between the non-custodial wallets and exchanges and their customers. Additionally, since the customers hold the private keys so the wallets are not liable for any consequences coming from the lost, compromised or hacked private keys of the customers. Nor do they need their customers to trust their servers in case wallet's servers go malicious or are compromised.</t>

<t>Basic PayID protocol <xref target="PAYID-PROTOCOL"></xref> specifies a protocol to interact with a PayID server and retrieve a payment account(s) information resource along with other meta-data corresponding to the queried PayID. One of the assumptions in the security model of the basic PayID protocol that is less desirable is the trust requirement between the PayID owner and their PayID server to provide correct payment account(s) address information resource. As such, PayID server has full control over the contents of the response message, and may go rogue or be compromised. The PayID owner has no way of knowing if the PayID server behaves maliciously. This implicit trust assumption between the PayID owner and PayID server is not ideal in the non-custodial settings.</t>

<t>The motivation for this extension of verifiable PayID protocol is to enable non-custodial service providers to provide non-custodial PayID service while preserving their existing security model. More specifically, this extension allows PayID owners to digitally sign the payment account(s) information resource locally on their application/device with their PayID private key (which never leaves their device). This signed payment account(s) information resource can then be securely transferred to the non-custodial PayID service providers' servers who can then send this to the PayID client in response to a PayID query along with PayID owner's <spanx style="verb">identity</spanx> information. The PayID client and/or the sender of the transaction can use this information to verify if the payment account(s) address information is signed by the PayID owner and decide if they want to proceed with the transaction.</t>

</section>
<section anchor="verifiable-payid-protocol-extension-specification" title="Verifiable PayID Protocol Extension Specification">
<t>The Verifiable PayID protocol is designed along the same design principles as <xref target="PAYID-PROTOCOL"></xref>.</t>

<section anchor="paymentinformation-resource-as-json-web-signatures" title="PaymentInformation Resource as JSON Web Signatures">
<t>We describe the payment accounts(s) information resource per <xref target="PAYID-PROTOCOL"></xref> that is digitally signed as <spanx style="verb">PaymentInformation</spanx> resource represented as a signed JSON Web Tokens (JWT) <xref target="RFC7519"></xref> known as JSON Web Signature (JWS) <xref target="RFC7515"></xref>. JWT is a compact, URL-safe means of representing claims to be transferred between two parties. JWTs encode claims as a JSON object that is used as the payload of a JWS structure enabling the claims to be digitally signed. Below we define the three components of JWS.</t>

<section anchor="jose-protected-header" title="JOSE Protected Header">
<t>For JWS, the members of the JSON object represented by the JOSE Header describe the cryptographic operations applied to the JWS Protected header and the JWS payload and optionally additional properties of the JWS.</t>

<t>For a complete list of members of this object, refer to <xref target="RFC7519"></xref> and <xref target="RFC7515"></xref>. Following is an example of a JWT object representing JOSE header parameters for JWS JSON Serialization syntax.</t>

<figure><artwork><![CDATA[
{
       "name": "identityKey",
       "alg" : "ES256K", 
       "typ" : "JOSE+JSON",
       "b64" : "false",
       "crit": ["b64"],
       "jwk" :  {
            "kty": "EC",
            "use": "sig",
            "crv": "secp256k1", 
            "x"  : "0", 
            "y". : "0",
                },
}
]]></artwork></figure>

<section anchor="name" title="name">
<t>The <spanx style="verb">name</spanx> Header Parameter identifies the type of signature. It is a new OPTIONAL header parameter that is not defined in the IANA JSON Web Signature and Encryption Header Parameters Registry.</t>

</section>
<section anchor="alg" title="alg">
<t>The "alg" (algorithm) Header Parameter identifies the cryptographic algorithm used to secure the JWS. This is a required field as described in <xref target="RFC7515"></xref>. We RECOMMEND using "ES256K" which is Elliptic Curve Digital Signature Algorithm (ECDSA) using secp256k1 curve-type and SHA-256 hash-type as defined in IANA JSON Web Signature and Encryption Header Parameters Registry.</t>

</section>
<section anchor="typ" title="typ">
<t>The "typ" (type) Header Parameter is used by JWS applications to declare the media type of the complete JWS. This is an optional field as described in <xref target="RFC7515"></xref>.</t>

</section>
<section anchor="b64" title="b64">
<t>The "b64" (base64url-encode) Header Parameter is an extension to JWS specification that determines how payload is represented in the JWS and the JWS signing input. When the "b64" value is "false", the payload is represented simply as the JWS Payload value with no encoding; otherwise, it is represented as ASCII(BASE64URL(JWS Payload)). This is an optional field as described in <xref target="RFC7797"></xref>.</t>

</section>
<section anchor="crit" title="crit">
<t>The "crit" (critical) Header Parameter indicates that extensions to JWS specification are being used that MUST be understood and processed. This is a required field to be used with "b64" parameter as described in <xref target="RFC7797"></xref>.</t>

</section>
<section anchor="jwk" title="jwk">
<t>The "jwk" (JSON Web Key) Header Parameter represents the public key that is used to digitally sign the JOSE header and JWS payload. This parameter is represented as a JSON Web Key as specified in <xref target="RFC7517"></xref>. In the header above, members of "jwk" represent the properties of the public key, including its value that corresponds to the algorithm "ES256K".</t>

<t><list style="symbols">
  <t>kty: The "kty" (key type) parameter identifies the cryptographic algorithm family used with the key, such as "EC" for Elliptic Curve.</t>
  <t>use: The "use" (public key use) parameter identifies the intended use of the public key such as "sig" for signature.</t>
  <t>crv : The "crv" (Curve) parameter represents the elliptic curve-type and the hash-type such as "secp256k1" represents curve-type <spanx style="verb">secp256k1</spanx> and the hash-type <spanx style="verb">SHA-256</spanx>.</t>
  <t>x : Since we assume the "alg" parameter as "ES256K" which is one from the ECDSA family, so "x" parameter represents the X-coordinate of the corresponding public key.</t>
  <t>y : Since we assume the "alg" parameter as "ES256K" which is one from the ECDSA family, so "y" parameter represents the Y-coordinate of the corresponding public key.</t>
</list></t>

<t>Note: "jwk" is one way way of embedding public key in the JOSE header. For more details on other possible options for "alg" and representing public keys refer to <xref target="RFC7515"></xref>.</t>

</section>
</section>
<section anchor="jws-payload" title="JWS Payload">
<t>The JWS payload is the message that needs to be signed.</t>

<figure><artwork><![CDATA[
  {
          "exp"  : "",
          "payId": "bob$wallet.com",
          "payIdAddress": {
            "expTime": "",
            "paymentNetwork": "XRPL",
            "environment": "TESTNET",
            "addressDetailsType": "CryptoAddressDetails",
            "addressDetails": {
              "address": "T7CKYKhRujaxEs9fSxQwJApHsQVPKUgD7EtLWCGTAFBwTha"
            }
          }
  }
]]></artwork></figure>

<section anchor="exp" title="exp">
<t>The <spanx style="verb">exp</spanx> field is an optional field as described in <xref target="RFC7797"></xref>. If used, it SHOULD be set to the expiration time of the cryptographic key used to generate the digital signature.</t>

</section>
<section anchor="payid" title="payId">
<t>The <spanx style="verb">payId</spanx> field is a required field. The value of <spanx style="verb">payId</spanx> field is the PayID URI in the client request that identifies the payment account information that the JSON object describes.</t>

</section>
<section anchor="payidaddress" title="PayIDAddress">
<t>The <spanx style="verb">PayIDAddress</spanx> is a required field. The value of <spanx style="verb">PayIDAddress</spanx> field is a JSON object with the following keys:</t>

<t><list style="symbols">
  <t>"expTime": This is an optionl field. The value of <spanx style="verb">expTime</spanx> string is set to the maximum time upto which the payment address in the <spanx style="verb">address</spanx> field is valid.</t>
  <t>"paymentNetwork": The value of the <spanx style="verb">paymentNetwork</spanx> is the value of payment-network string as specified in the client request's <spanx style="verb">Accept</spanx> header.</t>
  <t>"environment": The value of <spanx style="verb">environment</spanx> string is the value of environment as specified in the client request's <spanx style="verb">Accept</spanx> header.</t>
  <t>"addressDetailsType": The value of <spanx style="verb">addressDetailsType</spanx> is one of the following strings:  <list style="symbols">
      <t>CryptoAddressDetails</t>
      <t>FiatAddressDetails</t>
    </list></t>
  <t>"addressDetails": The value of <spanx style="verb">addressDetails</spanx> is the address information necessary to send payment on a specific <spanx style="verb">paymentNetwork</spanx> and <spanx style="verb">environment</spanx>.</t>
</list></t>

<t>The <spanx style="verb">address</spanx> field MUST be present in the JWS payload.</t>

</section>
</section>
<section anchor="jws-signature" title="JWS signature">
<t>The JWS signature is the digital signature which is calculated over the JOSE header and the JWS payload.</t>

<figure><artwork><![CDATA[
 "signature": "base64Signature"
]]></artwork></figure>

<section anchor="signature" title="signature">
<t>The value of <spanx style="verb">signature</spanx> field is computed as described in <xref target="RFC7515"></xref>.</t>

</section>
</section>
</section>
<section anchor="end-to-end-verifiable-payid-protocol-flow-for-non-custodial-wallets-and-exchanges" title="End-to-End Verifiable PayID Protocol Flow for Non-Custodial Wallets and Exchanges">
<t>A pre-requisite for this extension of Verifiable PayID protocol requires the PayID owner to transfer signed <spanx style="verb">PaymentInformation</spanx> to the PayID server. In this document we specify one such way of doing this.</t>

<t>Following are the pre-steps at PayID owner's (non-custodial wallet's customer) device locally:</t>

<section anchor="generating-payid-key-pair" title="Generating PayID Key-pair">
<t>We RECOMMEND using elliptic curve (EC) key type with Elliptic Curve Digital Signature Algorithm (ECDSA) with secp256k1 curve for signature.</t>

</section>
<section anchor="generating-jws-token" title="Generating JWS Token">
<t>For each <spanx style="verb">payment-network</spanx> and <spanx style="verb">environment</spanx> that the PayID owner has a payment address for, generate the JOSE header, JWS Payload and JWS Signature as described above. A complete <spanx style="verb">PaymentInformation</spanx> response might look like:</t>

<t>{</t>

<figure><artwork><![CDATA[
 "payId": "bob$wallet.com",
 "addresses": [],
 "verifiedAddresses": [
    {
        "signatures": [
          {
            "protected": {
              "name": "identityKey",
              "alg": "ES256K", 
              "typ": "JOSE+JSON",
              "b64": "false",
              "crit": ["b64"],
              "jwk": {
                  "kty": "EC",
                  "use": "sig",
                  "crv": "secp256k1", 
                  "x": "b8w36l6eCf7GyD5fvXp0Xj7ugdFuvYYcnmb1VRjBl5g=", 
                  "y": "Tp8RPAf4dWkd+K/BApSW/Ey5UJs53NOPJRqDNZzItPc=",
              },
            },
            "signature": "base64Signature",
          }
          ]
        "payload": {
            "exp" :
            "payId": "bob$wallet.com",
            "payIdAddress": {
              "expTime":
              "paymentNetwork": "XRPL",
              "environment": "TESTNET",
              "addressDetailsType": "CryptoAddressDetails",
              "addressDetails": {
                "address": "T7CKYKhRujaxEs9fSxQwJApHsQVPKUgD7EtLWCGTAFBwTha"
               }
             }
          }
        }
      ]
    }
]]></artwork></figure>

<t><list style="symbols">
  <t>addresses: The <spanx style="verb">addresses</spanx> array is an OPTIONAL field. The implementations MAY choose to populate this field with payment address(es) information as per <xref target="PAYID-PROTOCOL"></xref>. The implementations SHOULD refer to Security Considerations sections for the possible security trade-offs while using this field.</t>
  <t>VerifiedAddresses: The <spanx style="verb">VerifiedAddresses</spanx> is a required field.</t>
</list></t>

</section>
<section anchor="posting-signed-response-to-non-custodial-payid-service-providers-server" title="Posting signed response to non-custodial PayID service Provider's server">
<t>Implementations SHOULD use a secure communication channel to transfer these resources to the PayID server.</t>

</section>
</section>
<section anchor="basic-operations" title="Basic Operations">
<t>Following are the basic operations performed by the verifiable PayID client and PayID server to retrieve <spanx style="verb">PaymentInformation</spanx> resource corresponding to PayID.</t>

<section anchor="payid-client-requesting-the-paymentinformation-resource" title="PayID Client Requesting the PaymentInformation Resource">
<t>When requesting the <spanx style="verb">PaymentInformation</spanx> resource, a verifiable PayID client MAY use the same HTTP <spanx style="verb">GET</spanx> method as in <xref target="PAYID-PROTOCOL"></xref> to the PayID URL without any query parameters and body.</t>

<t>The PayID client MUST query the PayID server using HTTPS only. <xref target="RFC2818"></xref> defines how HTTPS verifies the PayID server's identity. If the HTTPS connection cannot be established for any reason, then the PayID client MUST accept that the PayID request has failed and MUST NOT attempt to reissue the PayID request using HTTP over a non-secure connection.</t>

</section>
<section anchor="payid-server-responding-to-the-paymentinformation-resource-request" title="PayID Server Responding to the PaymentInformation Resource Request">
<t>Upon receiving a <spanx style="verb">GET</spanx> request for a payment accounts(s) information resource or a <spanx style="verb">PaymentInformation</spanx> resource, a PayID server that supports Verifiable PayID protocol returns the <spanx style="verb">PaymentInformation</spanx> resource for the <spanx style="verb">payment-network</spanx> and <spanx style="verb">environment</spanx> requested by the PayID client in the request <spanx style="verb">Accept</spanx> header field, along with other required and/or optional metadata.</t>

<t>However, if PayID server does not support the Verifiable PayID protocol, the PayID server sends back a response as described in <xref target="PAYID-PROTOCOL"></xref>.</t>

<t>If the PayID server does not contain the payment accounts(s) information resource or a <spanx style="verb">PaymentInformation</spanx> resource resource corresponding to the request, the PayID server MUST respond with an appropriate error message.</t>

</section>
<section anchor="parsing-the-paymentinformation-response" title="Parsing the PaymentInformation Response">
<t>The PayID client MUST conform to the verification of JWS as specified in <xref target="RFC7515"></xref> and <xref target="RFC7519"></xref>.</t>

</section>
</section>
</section>
<section anchor="example-use-of-the-verifiable-payid-protocol" title="Example Use of the Verifiable PayID Protocol">
<t>This section shows sample use of this extension of verifiable PayID protocol in a hypothetical scenario.</t>

<section anchor="verifiable-payid-protocol-by-a-non-custodial-wallet-as-payid-server" title="Verifiable PayID Protocol by a Non-Custodial Wallet as PayID Server">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet provider that Alice has an account on. Alice would log-in to the wallet provider and enter Bob's PayID (say, <spanx style="verb">bob$wallet.com</spanx>) into the wallet UI to start the payment.
  The Wallet application would first discover the PayID URL for the PayID service-provider using one of the mechanisms described in PayID discovery <xref target="PAYID-DISCOVERY"></xref> protocol.</t>

<t>The Wallet application would then issue an HTTPS GET request:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.wallet.com
 Accept: application/xrpl-testnet+json
 PayID-version: 1.0
]]></artwork></figure>

<t>Bob's wallet who is a non-custodial PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-Version: 1.0
 Cache-Control: "no-store"
 Server: Apache/1.3.11
{
 "payId": "bob$wallet.com",
 "addresses": [],
 "verifiedAddresses": [
    {
        "signatures": [
          {
            "protected": {
              "name": "identityKey",
              "alg": "ES256K", 
              "typ": "JOSE+JSON",
              "b64": "false",
              "crit": ["b64"],
              "jwk": {
                  "kty": "EC",
                  "use": "sig",
                  "crv": "secp256k1", 
                  "x": "b8w36l6eCf7GyD5fvXp0Xj7ugdFuvYYcnmb1VRjBl5g=", 
                  "y": "Tp8RPAf4dWkd+K/BApSW/Ey5UJs53NOPJRqDNZzItPc=",
              },
            },
            "signature": "base64Signature",
          }
          ]
        "payload": {
            "exp" : "1234574940",
            "payId": "bob$wallet.com",
            "payIdAddress": {
              "expTime": "34874613475",
              "paymentNetwork": "XRPL",
              "environment": "TESTNET",
              "addressDetailsType": "CryptoAddressDetails",
              "addressDetails": {
                "address": "T7CKYKhRujaxEs9fSxQwJApHsQVPKUgD7EtLWCGTAFBwTha"
               }
             }
          }
        }
      ]
  }
]]></artwork></figure>

<t>In the above example, the <spanx style="verb">PaymentInformation</spanx> resource is a pre-signed message with the PayID private keys of the PayID owner Bob. Bob's non-custodial wallet retrieves this response and sends it to the PayID client.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">
<t>This security considerations section only considers verifiable PayID clients and servers bound to implementations as defined in this document.</t>

<t>The security guarantees mentioned in <xref target="PAYID-PROTOCOL"></xref> applies to this extension of verifiable PayID protocol. In this section, we discuss a security model for the Verifiable PayID protocol for non-custodial service providers.</t>

<section anchor="security-model-for-non-custodial-payid-service-providers" title="Security Model for Non-Custodial PayID Service Providers">

<t>In the current security model, non-custodial wallets do not store their customersâ€™ keys on their servers. The customers hold their private keys on their device. There is a no trust requirement between the service provided by the non-custodial wallets and the customers of this service. Since the customers hold the private keys:
  * The wallets are not liable for any consequences coming from the lost, compromised or hacked private keys of the customers.
  * The non-custodial wallets do not require their customers to trust their servers in case wallets servers go malicious or are compromised.</t>

<t>This extension of verifiable PayID protocol preserves this trust model. Consequently, a non-custodial wallet running a PayID server has no liability for providing accurate <spanx style="verb">PaymentInformation</spanx> for their customers that is signed with the private key of the non-custodial PayID server wallet. Instead, the PayID owners can generate these signed mappings with their own PayID private key locally on their app/device. The sender of the payment (PayID client walletâ€™s customer) can easily verify these signatures based on the trust relationship between the sender and the receiver (PayID owner). This eliminates any risk of the non-custodial PayID server wallet losing its private keys, going malicious, getting hacked, or becoming otherwise compromised in a way that customers might lose funds.</t>

</section>
<section anchor="using-jwts" title="Using JWTs">
<t>The implementations of this extension of Verifiable PayID protocol MUST refer to the Security Considerations sections of <xref target="RFC7515"></xref> and</t>

</section>
<section anchor="using-addresses-array" title="Using addresses Array">
<t>The <spanx style="verb">addresses</spanx> array in the <spanx style="verb">PaymentInformation</spanx> response is an array of unsigned payment addresses. Implementations of this extension of verifiable PayID that choose to populate this array along with the <spanx style="verb">verifiedAddresses</spanx> array MAY be vulnerable to downgrade attacks. We RECOMMEND against populating this array unless absolutely necessary depending on the use-case.
ALso, note that this approach is not backwards-compatible with the PayID clients that do not understand verifiable PayID.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">
<t>All privacy guarantees in the Privacy Considerations section of <xref target="PAYID-PROTOCOL"></xref> apply to this extension of verifiable PayID protocol.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC8446;
&RFC7258;
&RFC5280;
&RFC6979;
&RFC8422;
&RFC7515;
&RFC7797;
&RFC7519;
&RFC4949;
&RFC7517;
<reference anchor="DID" target="https://www.didalliance.org/">
  <front>
    <title>Digital Identity Alliance</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GiD" target="https://www.global.id/">
  <front>
    <title>Global identity</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="HUUID" target="https://github.com/codetsunami/HumanUUID">
  <front>
    <title>Human Universally Unique Identifier</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-PROTOCOL" >
  <front>
    <title>PayID Protocol</title>
    <author initials="D." surname="Schwartz" fullname="David Schwartz">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="VER-PAYID-PROTOCOL" >
  <front>
    <title>Verifiable PayID Protocol</title>
    <author initials="D." surname="Schwartz" fullname="David Schwartz">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC4732;


    </references>



  </back>

<!-- ##markdown-source:
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
wikjBt2TqshvtinUWn9toNXr/S+naiumt1cAAA==

-->

</rfc>

