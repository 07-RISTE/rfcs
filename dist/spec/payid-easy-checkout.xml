<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC7231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY RFC6265 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6265.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="payid-easy-checkout-protocol" category="std">

  <front>
    <title>Draft 1 - PayID Easy Checkout Protocol</title>

    <author initials="N." surname="Kramer" fullname="Noah Kramer">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>nkramer@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="I." surname="Simpson" fullname="Ian Simpson">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>isimpson@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="July" day="13"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification formalizes how a payment recipient, such as a merchant or a non-profit, can automatically navigate 
a user to the user's wallet using only a PayID for the purposes of completing an online payment such as a checkout or
donation flow.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a draft proposal, and is part of the <eref target="https://payid.org/">PayID Protocol</eref> initiative. Feedback related to this document should be sent in the form of a Github issue at: https://github.com/payid-org/rfcs/issues.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">

<t>This protocol can be referred to as the <spanx style="verb">PayId Easy Checkout Protocol</spanx>. It uses the following terminology:
* PayID client: a client that queries a PayID server using the PayID Protocol as defined in [PAYID-PROTOCOL][].
* PayID server: the endpoint that returns payment account(s) information, which conforms to the PayID Protocol.
* merchant: individual or entity receiving the payment (ie e-commerce merchant, charity).
* customer: individual or entity originating the payment to the <spanx style="verb">merchant</spanx>.
* wallet: the holder of funds for the <spanx style="verb">sender</spanx> (may or may not be custodied).
* Redirect URL: The URL that is the result of the PayID Easy Checkout protocol, and which can be used to redirect a client to a wallet corresponding to a particular PayID.</t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> and [RFC9174][].</t>

</section>
<section anchor="introduction" title="Introduction">

<t>The PayID Easy Checkout Protocol is a minimal protocol designed to provide a set of standard APIs and flows, 
which can be used to send payments between two entities in a way that requires:
* minimal effort for the user initiating the transaction.
* no server-side software specific to PayID or its protocols for servicing the transaction.
* only UI-based solutions.</t>

<section anchor="motivation" title="Motivation">

<t>The PayID Easy Checkout Protocol aims to enable a consistent user experience for customers paying for goods
in an e-commerce by standardizing the interaction between merchants and customer wallets.
Given the ability to assign arbitrary metadata to a PayID as defined in <xref target="PAYID-DISCOVERY"></xref>, there is an opportunity
to standardize the set of interactions between merchant and customer, specifically the process by which a merchant
directs a customer to their digital wallet to complete a payment.
We believe this protocol will enable an improved paying experience by reducing the number
of steps a customer must take to complete a transaction and creating a consistent and familiar checkout pattern
for customers.</t>

<t>The second priority of PayID Easy Checkout is to limit the engineering effort needed to implement the protocol. 
Clients wishing to adopt this pattern should only need to implement UI-level changes in order to make the flow function 
as intended, which may aid in expanding overall adoption, further enhancing the protocol's user experience benefits.</t>

</section>
<section anchor="design-goals" title="Design Goals">

<section anchor="minimal-effort-for-the-customer" title="Minimal effort for the customer">

<t>In order for a customer to checkout using the PayID Easy Checkout protocol, the customer only needs to provide a merchant
with their PayID Easy Checkout enabled PayID.</t>

</section>
<section anchor="no-server-side-software-not-already-covered-by-the-payid-protocol" title="No server-side software not already covered by the PayID Protocol">

<t>Because the flow of PayID Easy Checkout is predicated on using the PayID Discovery Protocol and then redirecting the 
customer away from the merchant, all of the flow can be instrumented on the front end and doesn't require server-side resources.</t>

<t>Apart from a PayID Discovery compliant PayID Server, The PayID Easy Checkout Protocol does not require server-side 
software to be run by either the customer or merchant for a payment. The PayID server is capable of providing details 
of where to send the customer via the PayID Discovery Protocol. Assuming the wallet used by the customer has implemented 
support in their UI for the PayID Easy Checkout Protocol, the customer can be redirected to their wallet 
to complete their transaction.</t>

</section>
</section>
</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows a non-normative example of PayID Easy Checkout between a hypothetical merchant and customer. The merchant
accepts payments using the PayID pay$merchant.com, and the customer controls the PayID alice$wallet.com.</t>

<section anchor="payid-easy-checkout-initiation" title="PayID Easy Checkout Initiation">
<t>In this example, the customer might place some items in an online shopping cart on the merchant's UI, then choose
to checkout.  The merchant UI would then render a form asking for the customer's PayID, as well as a "Checkout with PayID"
button.  Once the customer inputs their PayID alice$wallet.com and clicks the "Checkout with PayID" button, the merchant
UI begins the PayID Easy Checkout flow.</t>

</section>
<section anchor="payid-easy-checkout-wallet-discovery" title="PayID Easy Checkout Wallet Discovery">
<t>The merchant UI would first assemble the PayID Discovery URL as defined in section 4.1.1 of <xref target="PAYID-DISCOVERY"></xref>,
yielding the URL <spanx style="verb">https://wallet.com/.well-known/webfinger?resource=payid%3Aalice%24wallet.com</spanx>. 
The merchant UI would then query the assembled URL as defined in section 4.1.2 of <xref target="PAYID-DISCOVERY"></xref>.</t>

<t>The HTTP request in this example would look like this:</t>

<figure><artwork><![CDATA[
GET /.well-known/webfinger?resource=payid%3Aalice%24wallet.com
Host: wallet.com
]]></artwork></figure>

<t>If the customer's PayID server has enabled PayID Easy Checkout in their wallet, the server would respond with something like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:alice$wallet.com",
   "links" :
   [
     {  
       "rel": "https://payid.org/ns/payid-easy-checkout/1.0",
       "template": "https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayId}&currency={currency}&nextUrl={nextUrl}"
     }
   ]
 }
]]></artwork></figure>

</section>
<section anchor="expand-wallet-discovery-url-template" title="Expand Wallet Discovery URL Template">
<t>The merchant UI would parse the PayID Discovery response and iterate over the "links" collection to find the link with 
the Relation Type of "https://payid.org/ns/payid-easy-checkout/1.0". The UI can then do a search and replace on
the "template" field value in the link, replacing all occurrences of the predefined query parameter template names with 
the values they want to send to the customer's wallet. One query parameter of note is the "nextUrl" parameter, which
allows the merchant to supply a redirect or callback URL for the sender's wallet to call once the customer has confirmed
the payment. In this example, the merchant would like to display a "Thank You" page, and replaces <spanx style="verb">{nextUrl}</spanx> 
with <spanx style="verb">https://merchant.com/thankyou</spanx>.</t>

</section>
<section anchor="redirect-customer-to-their-wallet" title="Redirect Customer to Their Wallet">
<t>Once the merchant UI populates the required query parameters in the URL template, the merchant UI redirects the customer to 
the Redirect URL so that the customer can confirm the payment.</t>

</section>
<section anchor="customer-confirms-payment" title="Customer Confirms Payment">
<t>After the customer clicks the "Pay with PayID" button the merchant's UI, and the merchant performs the previous steps,
the customer will be redirected to the Redirect URL, which is a front end resource of the wallet. The wallet UI can
read the query parameters from the Redirect URL and render a confirmation page or modal with all of the required fields
pre-populated.</t>

<t>Once the customer confirms the payment, the wallet would perform a PayID address lookup on the "receiverPayId" query
parameter to get the payment address of the merchant and submit a transaction to the underlying ledger or payment system.
The merchant can then redirect the user back to the URL specified in the "nextUrl" query parameter, which will display
the "Thank You" page of the merchant.</t>

</section>
</section>
<section anchor="payid-easy-checkout-protocol" title="PayID Easy Checkout Protocol">
<t>The PayID Easy Checkout Protocol can be used to facilitate an end-to-end checkout flow for users transacting
with an e-commerce entity.</t>

<t>The protocol is comprised of two parts:
1) PayID Easy Checkout Discovery
2) Checkout flow and auxiliary e-commerce logic.</t>

<t>While PayID Easy Checkout Discovery and the general user flow must be standardized to create a uniform API across 
all participants the manner by which e-commerce entities and digital wallets handle specific parts of the flow, along
with individual entities' business logic around checkout, is out of scope for this RFC. However, this paper will
recommend best practices for building PayID Easy Checkout flows.</t>

<section anchor="payid-easy-checkout-discovery" title="PayID Easy Checkout Discovery">
<t>The primary benefit of an e-commerce entity using the PayID Easy Checkout Protocol is its ability to automatically
redirect customers to their digital wallet to complete the checkout process. If merchants and payment
processors were instead forced to create one-off integrations with each wallet, implementing this functionality would
quickly become an untenable undertaking. On the other side of the protocol, individual wallets will likely want to
maintain control over resource locations on their individual domains.</t>

<t>In order to meet the technical needs of both wallets and e-commerce receivers, PayID Easy Checkout extends <xref target="PAYID-DISCOVERY"></xref>
by defining a new Link Relation type in the PayID metadata returned by a PayID Discovery query.</t>

<t>E-commerce receivers who wish to perform Easy Checkout MUST query the PayID Discovery server to obtain a PayID Easy Checkout
URL. Digital wallets who wish to enable Easy Checkout for their users MUST host a PayID Discovery server and MUST
respond to PayID Discovery queries with an Easy Checkout URL.</t>

<t>E-commerce receivers SHOULD implement fallback measures to complete checkout if a user's wallet does not support PayID Easy Checkout.</t>

<section anchor="step-1-assemble-payid-easy-checkout-discovery-url" title="Step 1: Assemble PayID Easy Checkout Discovery URL">
<t>The process of assembling a PayID Discovery URL is defined in section 4.1.1 of <xref target="PAYID-DISCOVERY"></xref>.</t>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Easy Checkout Discovery URL,
as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
as the resource representation to convey information about the requested
PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, or if the resulting JRD does not contain
a link with a PayID Easy Checkout URL Template, then PayID Easy Checkout is considered to have failed. Clients
SHOULD implement fallback measures to complete checkout in this case.</t>

</section>
<section anchor="step-3-parse-payid-easy-checkout-metadata" title="Step 3: Parse PayID Easy Checkout Metadata">
<t>If a wallet supports PayID Easy Checkout, the PayID server MUST respond with a HTTP status code 200 and a JSON payload
containing a JSON Resource Descriptor (JRD) as defined in section 5.2 of <xref target="PAYID-DISCOVERY"></xref>. Along with any other
PayID Metadata, the PayID server's response MUST contain a Link Relation conforming to the Link Relation definition
in the (TODO: link to section) section of this paper.</t>

<t>For example, a PayID server might respond to a PayID Easy Checkout discovery query with the following payload:</t>

<figure><artwork><![CDATA[
 {
    "subject": "payid:alice$wallet.com",
    "links": [
        {
            "rel" : "https://payid.org/ns/payid-easy-checkout/1.0",
            "template": "https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayId}&currency={currency}&nextUrl={nextUrl}"
        }
    ]
 }
]]></artwork></figure>

<t>The e-commerce receiver must parse this response, and find a link whose "rel" field has a value of 
"https://payid.org/ns/payid-easy-checkout/1.0". Any link with this relation MUST have a corresponding URI template,
as defined in (TODO: link to template syntax) the Template Syntax section of this document.</t>

</section>
<section anchor="step-4-assembling-payid-easy-checkout-url" title="Step 4: Assembling PayID Easy Checkout URL">
<t>The PayID Easy Checkout URL is constructed by applying various values, determined by the receiver, to the PayID Easy Checkout 
URI template found in the previous step.</t>

<t>The PayID Checkout URI template MAY not contain the complete set of variables specified in section (TODO link section) 
of this document.  However, PayID Easy Checkout clients MUST replace each variable instance with a value. It is RECOMMENDED
that PayID Easy Checkout clients have values available for every variable defined, in the case that the PayID Easy Checkout
URI Template contains the complete set of specified variables.</t>

<t>The result of replacing all template variables in the PayID Easy Checkout URI Template with values is a PayID Easy Checkout URL.
Once obtained, PayID Easy Checkout Discovery is considered to have completed successfully.</t>

</section>
<section anchor="template-syntax" title="Template Syntax">
<t>TODO: Update this for PayID Easy Checkout URI Template</t>

<t>This specification defines a simple template syntax for PayID Easy Checkout URI
transformation.  A template is a string containing brace-enclosed
("{}") variable names marking the parts of the string that are to be
substituted by the corresponding variable values.</t>

<t>This specification defines several variables, MAY or MAY NOT be present in every PayID Easy Checkout URI Template.
These variables are as follows:</t>

<figure><artwork><![CDATA[
'amount': The amount that should be sent by the sender to the receiver
'receiverPayID': The PayID URI of the receiver
'currency': The currency that the sender should send (TODO: define currency enum or use rfc)
'network': The network that the sender should send payment over (TODO: define network enum or use rfc)
'nextURL': A URL that the sender's wallet can use after completing the payment
]]></artwork></figure>

<t>When substituting values into a URI 'path' or 'query' part as defined by
[RFC3986][], values with characters outside the character set allows by paths or query parameters in [RFC3986][], 
respectively, MUST be percent or otherwise encoded.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT
change the meaning of the variables specified in this document. If a client is unable to
successfully process a template (e.g., unknown variable names, unknown or
incompatible syntax), the JRD SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char )
variable     =  "{" var-name "}"
PAYID-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
Input:    alice$wallet.com
          amount = 10
          receiverPayID=pay$merchant.com
          currency=XRP
          network=XRPL
          nextUrl=https://merchant.com/thankyou
Template: https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayID}&currency={currency}&network={network}&nextUrl={nextURL}
Output:   https://wallet.com/checkout?amount=10&receiverPayId=payid%2Apay%24merchant.com&currency=XRP&network=XRPL&nextUrl=https://merchant.com/thankyou
]]></artwork></figure>

<t>TODO: Should we define acceptable URL template variables for the redirect?</t>

</section>
</section>
</section>
<section anchor="payid-easy-checkout-jrds" title="PayID Easy Checkout JRDs">
<t>TODO: define JRD Link</t>

<section anchor="recommended-checkout-flow" title="Recommended Checkout Flow">
<t>TODO: Describe recommended checkout flow</t>

<section anchor="payment-detection-and-correlation" title="Payment Detection and Correlation">
<t>TODO: Describe recommendations for correlating payments to "invoices"</t>

</section>
</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">
<t>## New Link Relation Types
  This document defines the following Link relation types per [RFC7033][].
  See section 3 for examples of each type of Link.</t>

<t>### PayID Discovery URI Template</t>

<figure><artwork><![CDATA[
* Relation Type ('rel'): `https://payid.org/ns/payid-easy-checkout-uri/1.0`
* Media Type: `application/jrd+json`
* Description: PayID Discovery URI Template, version 1.0
]]></artwork></figure>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC8446;
&RFC7231;
&RFC7413;
&RFC6265;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

