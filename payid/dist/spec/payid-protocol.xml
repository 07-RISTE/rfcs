<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.6 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC7258 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7258.xml">
<!ENTITY RFC7231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml">
<!ENTITY RFC4732 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4732.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-aanchal-payid-protocol-01" category="std">

  <front>
    <title>PayID Protocol</title>

    <author initials="A." surname="Malhotra" fullname="Aanchal Malhotra">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>amalhotra@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="D." surname="Schwartz" fullname="David Schwartz">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>david@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="May" day="27"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID protocol - an application-layer protocol, which can be used to interact with a PayID-enabled service provider. The primary use-case is to discover payment account information along with optional metadata identified by a PayID <xref target="PAYID-URI"></xref>. The protocol is based on HTTP transfer of PayID protocol messages over a secure transport.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a part of the <eref target="https://payid.org/">PayID Protocol</eref> work.
 Feedback related to this specification should be sent to <eref target="mailto:payid@ripple.com">payid@ripple.com</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">
<t>This protocol can be referred to as <spanx style="verb">Basic PayID Protocol</spanx> or <spanx style="verb">PayID Protocol</spanx>. The following terminology is used by this specification.</t>

<t><list style="symbols">
  <t>Endpoint: either the client or the server of the connection.
  <list style="symbols">
      <t>Sending Endpoint: sending side of the transaction (wallet or exchange).</t>
      <t>Receiving Endpoint: receiving side of the transaction (wallet or exchange).</t>
    </list></t>
  <t>PayID client: The endpoint that initiates PayID protocol.</t>
  <t>PayID owner: The owner of the PayID URI as described in <xref target="PAYID-URI"></xref>.</t>
  <t>PayID server: The endpoint that returns payment account information.</t>
</list></t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> and [RFC9174][].</t>

</section>
<section anchor="introduction" title="Introduction">
<t><xref target="PAYID-URI"></xref> describes a URI scheme to identify payment account(s) at a service provider. <xref target="PAYID-DISCOVERY"></xref>, on the other hand, defines how to transform a PayID URI into a PayID URL that can be used by other protocols to interact with a PayID-enabled service provider but does not define protocol(s) to do so.</t>

<t>This document specifies PayID protocol - an application-layer protocol which can be used to interact with a PayID-enabled service provider identified by PayID URL using standard HTTP methods over a secure transport. In its most basic mode, a PayID protocol resource returns a JavaScript Object Notation (JSON) object representing the payment account(s) information along with optional metadata corresponding to the queried PayID URI <xref target="PAYID-URI"></xref>. The protocol defines new media formatting types for requests and responses but uses normal HTTP content negotiation mechanisms for selecting alternatives that the PayID client and server may prefer in anticipation of serving new use cases.</t>

<section anchor="design-goals" title="Design Goals">

<t><list style="symbols">
  <t>Extensibility</t>
</list></t>

<t>Although, the primary use-case for payment account(s) information resource returned via Basic PayID protocol is assumed to be for making payments, the PayID protocol is designed to be easily extensible to facilitate creation and retrieval of other resources about the PayID owner, PayID client and/or PayID server that might be required for making payments.</t>

<t><list style="symbols">
  <t>Neutrality: Currency and Network Agnostic</t>
</list></t>

<t>PayID protocol is designed to be a fundamentally neutral protocol. PayID protocol is capable of returning a PayID owner's payment account(s) information for any network that they (or their service) support. This makes PayID protocol a network and currency agnostic protocol, capable of enabling payments in BTC, XRP, ERC-20 tokens, Lightning, ILP, or even fiat networks like ACH.</t>

<t><list style="symbols">
  <t>Decentralized &amp; Peer-to-Peer</t>
</list></t>

<t>Just like email servers, anyone can run their own PayID server or use third-party hosted services. If self-hosted, PayID protocol introduces no new counterparty risk or changes to a service’s security or privacy model. PayID protocol doesn’t require new, complex, and potentially unreliable peer discovery protocols, instead establishing direct peer-to-peer connections between communicating parties from the start.
   PayID is built on the most successful decentralized network: the web. There is no designated centralized authority, or a risk of a patchwork of different standards in different jurisdictions that make a global solution impossibly complex.</t>

<t><list style="symbols">
  <t>Service Sovereignty</t>
</list></t>

<t>Each service provider that uses PayID for their users maintains full control of its PayID URL space, PayID service and has the ability to incorporate any policy they choose, including privacy, authentication, and security.  They also have full sovereignty over users on their domain, just like in email. PayID is highly generalized and does not prescribe any particular solution outside of the standardized communication, which makes it compatible with existing compliance and user management tools and philosophies.</t>

</section>
</section>
<section anchor="payid-server-discovery" title="PayID Server Discovery">
<t>To support PayID protocol, the PayID client needs to discover the PayID URL corresponding to the PayID URI <xref target="PAYID-URI"></xref>. This can be obtained either using mechanisms described in <xref target="PAYID-DISCOVERY"></xref> or could be entered manually.</t>

</section>
<section anchor="json-format-design" title="JSON Format Design">
<t>JSON as described in [RFC8259][], defines a test format for serializing structured data. Objects are serialized as an unordered collection of name/value pairs. JSON does not define any semantics around the name/value pairs that make up an object. PayID protocol's JSON format defines name/value pairs that annotate a JSON object, property or array for PayID protocol resources.</t>

<t>The PayID client MUST request PayID response in JSON format through the <spanx style="verb">Accept</spanx> header with the media type as defined below, optionally followed by format parameters. One of the optional parameters is the case insensitive <spanx style="verb">q</spanx> value as described in Section 5.3.1 of <xref target="RFC7231"></xref>.</t>

<t>Each message body is represented as a single JSON object. This object contains name/value pair whose value is the correct representation for a primitive value as described in [RFC8259][], or an array or object as described in section below.</t>

<t>If the PayID server does not support JSON format, it MUST reply with an appropriate error response.</t>

<section anchor="http-method" title="HTTP Method">
<t>The PayID protocol payment account(s) information resource is requested using the HTTP GET method.</t>

<t>Following are the media types to request the payment account(s) information resource on different payment-networks and environments.</t>

</section>
<section anchor="media-type-of-payment-accounts-information-resource" title="Media Type of Payment Account(s) Information Resource">
<t>The media type for payment account information resource is <spanx style="verb">application/* + json</spanx>.</t>

</section>
<section anchor="response-for-application-json" title="Response for application/* + json">
<t>The response body for <spanx style="verb">application/* + json</spanx> is a JSON object with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  {  
   optional string payId,
   required Address[] addresses, 
   optional string memo,
   optional string identity,
   optional ProofOfControlSignature proofOfControlSignature
  }
]]></artwork></figure>

<section anchor="payid" title="payId">
<t>The value of <spanx style="verb">payId</spanx> field is the PayID URI in the client request that identifies the payment account information that the JSON object describes.</t>

<t>The <spanx style="verb">payId</spanx> field is an optional field in the response.</t>

</section>
<section anchor="addresses" title="addresses">
<t>The value of <spanx style="verb">addresses</spanx> field is a JSON array of type <spanx style="verb">Address</spanx> of one or more JSON objects with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  { 
   required string paymentNetwork,
   optional string environment, 
   required string addressDetailsType,
   required addressDetailsType addressDetails
  }
]]></artwork></figure>

<t><list style="symbols">
  <t>paymentNetwork: The value of payment-network as specified in the client request's <spanx style="verb">Accept</spanx> header</t>
  <t>environment: The value of environment as specified in the client request's <spanx style="verb">Accept</spanx> header</t>
  <t>addressDetailsType: The value of <spanx style="verb">addressDetailsType</spanx> is JSON object of one of the following types.
  <list style="symbols">
      <t>CryptoAddressDetails</t>
      <t>ACHAddressDetails</t>
    </list></t>
  <t>addressDetails: The value of <spanx style="verb">addressDetails</spanx> is the address information necessary to send payment on a specific payment-netowrk and environment.</t>
</list></t>

<t>The <spanx style="verb">addresses</spanx> field MUST be present in the response.</t>

<section anchor="addressdetailstype" title="addressDetailsType">
<t>We define the following two types of payment address types.</t>

<t><list style="symbols">
  <t>CryptoAddressDetails: This is a JSON object with the following name/value pairs.  <vspace blankLines='1'/>
{
  required string address,
  optional string tag
}  <list style="symbols">
      <t>address: The value of <spanx style="verb">address</spanx> field contains the on-ledger address corresponding.</t>
      <t>tag: The value of <spanx style="verb">tag</spanx> field is the tag value used by some cryptocurrencies to distinguish accounts contained within a singular address. E.g XRP's destination tag.</t>
    </list></t>
  <t>ACHAddressDetails: This is a JSON object with the following name/value pairs.  <vspace blankLines='1'/>
{
  required string accountNumber,
  required string routingNumber
}  <list style="symbols">
      <t>accountNumber: The value of <spanx style="verb">accountNumber</spanx> is the ACH account number.</t>
      <t>routingNumber: The value of <spanx style="verb">routingNumber</spanx> is the ACH routing number.</t>
    </list></t>
</list></t>

</section>
</section>
<section anchor="memo" title="memo">
<t>The <spanx style="verb">memo</spanx> string may specify additional metadata corresponding to a payment.</t>

<t>The <spanx style="verb">memo</spanx> string is an OPTIONAL field in the response.</t>

</section>
<section anchor="identity" title="identity">
<t>The <spanx style="verb">identity</spanx> string may specify any additional identity information about the PayID owner or PayID server.</t>

<t>The <spanx style="verb">identity</spanx> string is an OPTIONAL field in the response.</t>

</section>
<section anchor="proofofcontrolsignature" title="proofOfControlSignature">
<t>The value of <spanx style="verb">proofOfControlSignature</spanx> field is a JSON object of type <spanx style="verb">ProofOfControlSignature</spanx> with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  {
   required string publicKey,
   required string payID, 
   required string hashAlgorithm,
   required string signature
  }
]]></artwork></figure>

<t><list style="symbols">
  <t>publicKey: On-ledger public key of the Receiving Endpoint</t>
  <t>payID: PayID URI of the PayID owner</t>
  <t>hashAlgorithm: Hash algorithms used to hash the entire contents of the <spanx style="verb">ProofOfControlSignature</spanx> message.</t>
  <t>signature: Digital signature over the hash of the entire contents of the <spanx style="verb">ProofOfControlSignature</spanx> message using the private key corresponding to the public key in <spanx style="verb">publicKey</spanx>. This is a proof that the Receiving Endpoint is the owner of the on-ledger public key in <spanx style="verb">publicKey</spanx>.</t>
</list></t>

<t>The <spanx style="verb">proofOfControlSignature</spanx> is an OPTIONAL field in the response.</t>

</section>
</section>
<section anchor="meaning-of-media-type-application-json" title="Meaning of Media Type application/* + json">
<t><spanx style="verb">*</spanx> may represent different payment-networks and environments. In this document, we propose standards with the media types specific to XRP, ILP, and ACH payment networks. We also propose media type that returns all addresses across all payment networks. Other payment networks MUST establish standard media types for their networks at IANA.</t>

<t><list style="symbols">
  <t>Accept: application/payid-json
  Returns all payment account(s) information correspnding to the requested PayID URI</t>
  <t>Accept: application/xrpl-mainnet+json</t>
</list></t>

<t>Returns XRPL mainnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/xrpl-testnet+json</t>
</list></t>

<t>Returns XRPL testnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/xrpl-devnet+json</t>
</list></t>

<t>Returns XRPL devnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/interledger-testnet+json</t>
</list></t>

<t>Returns mainnet payment pointer to initiate SPSP request</t>

<t><list style="symbols">
  <t>Accept: application/interledger-devnet+json</t>
</list></t>

<t>Returns testnet payment pointer to initiate SPSP request</t>

<t><list style="symbols">
  <t>Accept: application/ach+json</t>
</list></t>

<t>Returns account and routing number</t>

<t>The PayID client MAY specify more than one media types along with the preference parameter. The server MUST respond as described in the Content Negotiation section below.</t>

</section>
</section>
<section anchor="header-fields" title="Header Fields">
<t>PayID protocol defines semantics around the following request and response headers. Additional headers MAY be defined, but have no unique semantics defined in the PayID protocol.</t>

<section anchor="common-headers" title="Common Headers">
<t>The following headers are common between PayID requests and responses.</t>

<section anchor="header-content-type" title="Header Content-Type">
<t>PayID requests and responses with a JSON message body MUST have a <spanx style="verb">Content-Type</spanx> header value of <spanx style="verb">application-json</spanx>.</t>

</section>
<section anchor="header-content-length" title="Header Content-Length">
<t>As defined in [RFC7230][], a request or response SHOULD include a <spanx style="verb">Content-Length</spanx> header when the message's length can be determined prior to being transferred. PayID protocol does not add any additional requirements over HTTP for writing Content-Length.</t>

</section>
<section anchor="header-payid-version-todo" title="Header PayID-version (TODO)">
<t>The PayID client MUST include the PayID version request header field to specify the version of the PayID protocol used to generate the request.</t>

<t>If present on a request, the PayID server MUST interpret the request according to the rules defined in the specified version of the PayID protocol or fail the request with an appropriate error response code.</t>

<t>If not specified in a request, the PayID server MUST fail the request with an appropriate error code.</t>

</section>
</section>
<section anchor="request-headers" title="Request Headers">
<t>In addition to common Headers, the PayID client MUST specify the following request header.</t>

<section anchor="header-accept" title="Header Accept">
<t>The PayID client MUST specify the <spanx style="verb">Accept</spanx> request header field with at least one of the registered media types (Section X). The purpose of this header is to indicate what type of content can be understood in the response. It specifies the <spanx style="verb">payment-network</spanx> and <spanx style="verb">environment</spanx> of the payment account and its representation format for which the PayID client wants to receive information. The representation format is always JSON.</t>

<t>PayID server MUST reject formats that specify unknown or unsupported format parameters.</t>

</section>
</section>
<section anchor="response-headers" title="Response Headers">
<t>In addition to the Common Headers, the PayID server MUST specify the following response header.</t>

<section anchor="header-cache-control" title="Header Cache-Control">
<t>PayID server MUST include the <spanx style="verb">Cache-Control</spanx> header with the max-age limit of 0. The intermediate hops or PayID client MUST not cache the responses.</t>

</section>
</section>
</section>
<section anchor="basic-payid-protocol" title="Basic PayID Protocol">
<t>Basic PayID protocol is used to request payment account(s) information resource identified by a PayID URI from a PayID-enabled service provider identified by a PayID URL using HTTP over secure transport. When successful, PayID protocol always returns the JSON representation of payment account(s) information resource along with optional metadata. This information can be used for any purposes outside the scope of this document.</t>

<t>Basic PayID protocol comprise of request and response messages, each of which is defined in more detail below. The following is a visual representation of the basic protocol flow:</t>

<figure><artwork><![CDATA[
PayID client                                         PayID server
   |                                                          |
   |              1.) GET request to PayID URL                |
   |--------------------------------------------------------->|
   |                                                          | |                                                          |
   |              2.) 200 Ok                                  |
   |                  Payment account information response    |
   |<---------------------------------------------------------|
   |                                                          |
   |                                                          | 
]]></artwork></figure>

<section anchor="step-1-http-request-to-payid-url-using-http-get-method" title="Step 1: HTTP Request to PayID URL using HTTP GET Method">
<t>A basic PayID client issues a query using the HTTP GET method to the PayID URL without any query parameters and body.</t>

<t>The PayID client MUST query the PayID server using HTTPS only. <xref target="RFC2818"></xref> defines how HTTPS verifies the PayID server's identity. If the HTTPS connection cannot be established for any reason, then the PayID client MUST accept that the PayID request has failed and MUST NOT attempt to reissue the PayID request using HTTP over a non-secure connection.</t>

</section>
<section anchor="step-2-payment-account-information-response" title="Step 2: Payment Account Information Response">
<t>In response, the PayID server returns a JSON object representation of the payment account(s) information resource for the payment-network and environment requested by PayID client in the request <spanx style="verb">Accept</spanx> header field along with other required and/or optional meta data.</t>

<t>PayID servers MUST be able to process <spanx style="verb">application/payid+json</spanx> header type.</t>

<t>If the PayID server does not contain the payment account information corresponding to the request, the PayID server MUST respond with an appropriate error message.</t>

<t>A PayID server MAY redirect the PayID client; if it does, the redirection MUST only be to an <spanx style="verb">https</spanx> URI and the PayID client MUST perform certificate validation again when redirected.</t>

</section>
<section anchor="step-3-parse-payment-account-information-response" title="Step 3: Parse Payment Account Information Response">
<t>If the PayID server returns a valid response, the response will contain one or more of fields defined above.</t>

</section>
</section>
<section anchor="example-use-of-basic-payid-protocol" title="Example Use of Basic PayID Protocol">
<t>This section shows sample use of Basic PayID protocol in several
   hypothetical scenarios.</t>

<section anchor="basic-payid-protocol-by-a-wallet" title="Basic PayID Protocol by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet provider that Alice has an account on. Alice would log-in to the wallet provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the wallet UI to start the payment. 
   The Wallet application would first discover the PayID URL for the PayID service-provider using one of the mechanisms described in PayID discovery <xref target="PAYID-DISCOVERY"></xref> protocol.</t>

<t>The Wallet application would then issue an HTTPS GET request:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.receiver.example.com
 Accept: application/payid+json
 PayID-version: 0.1
]]></artwork></figure>

<t>The PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-version: 0.1
 Cache-Control: max-age=0
 Server: Apache/1.3.11
 {
   "payId" : "bob$receiver.example.com",
   "addresses" :
   [
     {  
       "paymentNetwork" : "xrpl",
       "environment" : "testnet",
       "addressDetailsType" : "CryptoAddressDetails",
       "addressDetails" : {
                    "address" : "XTVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"
            }
      },
     {
       "paymentNetwork" : "ach",
       "environment" : "mainnet",
       "addressDetailsType" : "ACHAddressDetails",
       "addressDetails" : {
                    "accountNumber" : "5674536253",
                    "routingNumber" : "aYJTDFGLKAJD"
            }
      }
    ],
    "memo" : "Additional optional Information"
 }
]]></artwork></figure>

<t>In the above example we see that the PayID server returned a list of payment accounts identified by PayID <spanx style="verb">bob$receiver.example.com</spanx>. This is because Alice's Wallet asked for all the payment accounts corresponding to the PayID in the <spanx style="verb">Accept</spanx> header. 
  Alice's Wallet MAY then use the payment account information to make payments.</t>

<t>Another example:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.receiver.example.com
 Accept: application/xrpl-testnet+json; q=0.4,
         application/ach+json; q=0.1
 PayID-version= 0.1
]]></artwork></figure>

<t>The PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-version: 0.1
 Cache-Control: max-age=0
 Server: Apache/1.3.11
 {
   "payId" : "bob$receiver.example.com",
   "addresses" :
   [
     {  
       "paymentNetwork" : "xrpl",
       "environment" : "testnet",
       "addressDetailsType" : "CryptoAddressDetails",
       "addressDetails" : {
                    "address" : "XTVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"
            }
      }
    ]
 }
]]></artwork></figure>

</section>
</section>
<section anchor="common-response-status-codes-todo" title="Common Response Status Codes (TODO)">
<t>A PayID server MAY respond to request using any valid HTTP response code appropriate for the request. The PayID server SHOULD be as specific as possible in its choice of an HTTP specific status code.</t>

<section anchor="success-responses" title="Success Responses">
<t>The following response codes represent successful requests.</t>

<section anchor="response-code-200-ok" title="Response Code 200 OK">
<t>A request that does not create a resource returns 200 OK if it is completed successfully and the value of the resource is not null. null. In this case, the response body MUST contain the value of the resource specified in the request URL.</t>

</section>
<section anchor="response-code-3xx-redirection" title="Response Code 3xx Redirection">
<t>As per <xref target="RFC7231"></xref>, a 3xx Redirection indicates that further action needs to be taken by the client in order to fulfill the request. In this case, the response SHOULD include a Location header, as appropriate, with the URL from which the result can be obtained; it MAY include a Retry-After header.</t>

</section>
</section>
<section anchor="client-error-responses" title="Client Error Responses">
<t>Error codes in the 4xx range indicate a client error, such as a malformed request. 
  In the case that a response body is defined for the error code, the body of the error is as defined for the appropriate format.</t>

</section>
</section>
<section anchor="content-negotiation" title="Content Negotiation">

<t>The PayID client MAY choose to query for all possible payment addresses corresponding to a PayID URI</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/all+json                 
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with all payment account(s) information associated with the queried PayID.</t>

<t>Alternatively, the PayID client MAY choose to query for a subset payment account(s) information in the order of preference.</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/xrpl-testnet+json; q=0.4,
         application/xrpl-mainnet+json; q= 0.1
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with the payment account(s) information corresponding to one of the payment-network and environment mentioned in the <spanx style="verb">Accept</spanx> header in the order of client request preference. If none of those exist, PayID server MUST send an appropriate error response.</t>

<t>Alternatively, the PayID client MAY combine the above two approaches.</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/xrpl-testnet+json; q=0.4,
         application/xrpl-mainnet+json; q= 0.1,
         application/payid+json
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with the payment account information corresponding to one of the payment-network and environment mentioned in the <spanx style="verb">Accept</spanx> header in the order of PayID client's preference. If none of those exist, then the PayID server MUST respond with payment account(s) information corresponding to all payment accounts associated with the queried PayID URI.</t>

</section>
<section anchor="versioningtodo" title="Versioning(TODO)">

<t>Versioning enables clients and servers to evolve independently. PayID protocol defines semantics for protocol versioning.</t>

<t>PayID requests and responses are versioned according to the PayID-version header.
 PayID clients include the PayID-version header in order to specify the maximum acceptable response version. PayID servers respond with the maximum supported version that is less than or equal to the requested <spanx style="verb">major</spanx></t>

</section>
<section anchor="security-considerations" title="Security Considerations">
<t>This security considerations section only considers PayID clients and servers bound to implementations as defined in this document. Such implementations have the following characteristics:</t>

<t><list style="symbols">
  <t>PayID URIs are static and well-known to the PayID client; PayID server URLs can be static or discovered.</t>
</list></t>

<t>The following is considered out-of-scope:</t>

<t><list style="symbols">
  <t>Communication between the PayID owner and the wallet or exchange (which acts as PayID server) for PayID URI registration, etc.</t>
  <t>Communication between the sender of the transaction and PayID client to transfer information such as PayID URI and other transaction details, etc.</t>
  <t>PayID server URL discovery by PayID client. Implementations using PayID-Discovery <xref target="PAYID-DISCOVERY"></xref> MUST consider the security considerations in the corresponding document.</t>
  <t>PayID server URL resolution by PayID client. Implementations using DNS, DNSSEC, DoH, DoT, etc. MUST consider the security considerations of the corresponding documents.</t>
</list></t>

<section anchor="network-attacks" title="Network Attacks">
<t>Basic PayID protocol's security model assumes the following network attackers:</t>

<t><list style="symbols">
  <t>Off-path attacker: An off-path attacker can be anywhere on the network. She can inject and spoof packets but can not observe, or tamper with the legitimate traffic between the PayID client and the server.</t>
  <t>On-path attacker: An on-path attacker can eavesdrop, inject, spoof and replay packets, but can not drop, delay or tamper with the legitimate traffic.</t>
  <t>In-path or Man-in-the-middle (MiTM) attacker: An MiTM is the most powerful network attacker. An MiTM has full access to the communication path between the PayID client and the server. She can observe, modify, delay and drop network packets.</t>
</list></t>

<t>Additionally we assume that the attacker has enough resources to mount an attack but can not break the security guarantees provided by the cryptographic primitives of the underlying secure transport.</t>

<t>The basic PayID protocol runs over HTTPS and thus relies on the security of the underlying transport. Implementations utilizing TLS 1.3 benefit from the TLS security profile defined in [RFC 8446][] against all the above network attackers.</t>

<section anchor="denial-of-service-dos-attacks" title="Denial-of-Service (DoS) attacks">
<t>As such cryptography can not defend against DoS attacks because any attacker can stop/interrupt the PayID protocol by:
  * Dropping network packets, 
  * Exhaustion of resources either at the network level or at PayID client and/or server.</t>

<t>The PayID servers are recommended to follow general best network configuration practices to defend against such attacks <xref target="RFC4732"></xref>.</t>

</section>
</section>
<section anchor="information-integrity" title="Information Integrity">
<t>The HTTPS connection provides transport security for the interaction between PayID client and server but does not provide the response integrity of the data provided by PayID server. A PayID client has no way of knowing if data provided in the payment account information resource has been manipulated at the PayID server, either due to malicious behaviour on the part of PayID server administrator or as a result of being compromised by an attacker. As with any information service available on the Internet, PayID clients should be wary of the information received from untrusted sources.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">
<t>The PayID client and server should be aware that placing information on the Internet means that any one can access that information. While PayID protocol is an extremely useful tool to discovering payment account(s) information corresponding to a human-rememberable PayID URI, PayID owners should also understand the associated privacy risks. The easy access to payment account information via PayID protocol was a design goal of the protocol, not a limitation.</t>

<section anchor="access-control" title="Access Control">
<t>PayID protocol MUST not be used to provide payment account(s) information corresponding to a PayID URI unless providing that data via PayID protocol by the relevant PayID server was explicitly authorized by the PayID owner. If PayID owner wishes to limit access to information, PayID servers MAY provide an interface by which PayID owners can select which information is exposed through the PayID server interface. For example, PayID servers MAY allow PayID owners to mark certain data as <spanx style="verb">public</spanx> and then utilize that marking as a means of determining what information to expose via PayID protocol. The PayID servers MAY also allow PayID owners to provide a whitelist of users who are authorized to access the specific information. In such a case, the PayID server MUST authenticate the PayID client.</t>

</section>
<section anchor="payment-address-rotation" title="Payment Address Rotation">
<t>The power of PayID protocol comes from providing a single place where others can find payment account(s) information correspondong to a PayID URI, but PayID owners should be aware of how easily payment account information that one might publish can be used in unintended ways. As one example, one might query a PayID server only to see if a given PayID URI is valid and if so, get the list of associated payment account information. If the PayID server uses the same payment address each time, it becomes easy for third-party to track one's entire payment history. The PayID server SHOULD follow the best practice of payment address rotation for every query to mitigate this privacy concern.</t>

</section>
<section anchor="on-the-wire" title="On the Wire">
<t>PayID protocol over HTTPS encrypts the traffic and requires mutual authentication of the PayID client and the PayID server. This mitigates both passive surveillance <xref target="RFC7258"></xref> and the active attacks that attempt to divert PayID protocol queries to rogue servers.</t>

<t>Additionally, the use of the HTTPS default port 443 and the ability
  to mix PayID protocol traffic with other HTTPS traffic on the same connection can deter unprivileged on-path devices from interfering with PayID operations and make PayID traffic analysis more difficult.</t>

</section>
<section anchor="in-the-payid-server" title="In the PayID Server">
<t>The Basic PayID protocol data contains no information about the PayID client; however, various transports of PayID queries and responses do provide data that can be used to correlate requests. A Basic PayID protocol implementation is built on IP, TCP, TLS and HTTP. Each layer contains one or more common features that can be used to correlate queries to the same identity.</t>

<t>At the IP level, the PayID client address provides obvious correlation information. This can be mitigated by usee of NAT, proxy, VPN, or simple address rotation over time. It may be aggravated  by use of a PayID server that can correlate real-time addressing information with other identifiers, such as when PayID server and other services are operated by the same entity.</t>

<t>PayID client implementations that use one TCP connection for multiple PayID requests directly group those requests. Long-lived connections have better performance behaviours than short-lived connections; however they group more requests, which can expose more information to correlation and consolidation. TCP-based solutions may also seek performance through the use of TCP Fast Open [RFC7413][]. The cookies used in TCP Fast open may allow PayID servers to correlate TLS connections together.</t>

<t>TCP-based implementations often achieve better handshake performance throught the use of some form of session resumption mechanism, such as Section 2.2 of <xref target="RFC8446"></xref>. Session resumption creates trivial mechanism for a server to correlate TLS connections together.</t>

<t>HTTP's feature set can also be used for identification and tracking in a number of ways. For example, Authentication request header fields explicitly identify profiles in use, and HTTP cookies are designed as an explicit state-tracking mechanism and are often used as an authentication mechanism.</t>

<t>Additionally, the <spanx style="verb">User-Agent</spanx> and <spanx style="verb">Accept-Language</spanx> request header fields often convey specific information about the PayID client version or locale. This allows for content-negotiation and operational work-arounds for implementation bugs. Request header fields that control caching can expose state information about a subset of the client's history. Mixing PayID queries with other HTTP requests on the same connection also provides an opportunity for richer data correlation.</t>

<t>The PayID protocol design allows implementations to fully leverage the HTTP ecosystem, including features that are not enumerated in this document. Utilizing the full set of HTTP featurees enables PayID to be more than HTTP tunnel, but it is at the cost of opening up implementations to the full set of privacy considerations of HTTP.</t>

<t>Implementations of PayID clients and servers need to consider the benefits and privacy impacts of these fetaures, and their deployment context, when deciding whether or not to enable them. Implementations are advised to expose the minimal set of data needed to achieve the desired feature set.</t>

<t>Determining whether or not PayID client implementation requires HTTP cookie [RFC6265][] support is particularly important because HTTP cookies are the primary state tracking mechanism in HTTP, HTTP cookies SHOULD NOT be accepted by PayID clients unless they are explicitly required by a use case.</t>

<t>Overall, the PayID protocol does not introduce privacy concerns beyond those associated with using the underlying IP, TCP, TLS and HTTP layers.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">
<t>This document defines registries for PayID protocol version and application/* +json media types.</t>

<section anchor="header-field-registration" title="Header Field Registration">
<t>Header field name: PayID-version: major.minor</t>

<t>Applicable Protocol: "PayID protocol"</t>

<t>Status: <spanx style="verb">standard</spanx></t>

<t>Author/Change controller: Refer to the contact details of the authors in this document.</t>

<t>Specification Document: <spanx style="verb">PayID protocol</spanx></t>

</section>
<section anchor="media-type-registration" title="Media Type Registration">
<t>This document registers multiple media types, listed in Table 1.</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Subtype</ttcol>
      <ttcol align='left'>Specification</ttcol>
      <c>application</c>
      <c>xrpl-mainnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>xrpl-testnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>xrpl-devnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>ach+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>interledger-mainnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>interledger-testnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>payid+json</c>
      <c>&#160;</c>
</texttable>

<t>Type Name: application</t>

<t>Subtype name: This document registers multiple subtypes as listed in table 1</t>

<t>Required parameters: n/a</t>

<t>Optional parameters: n/a</t>

<t>Encoding considerations:  Encoding considerations are identical to those specified for the "application/json" media type. See[RFC7159][].</t>

<t>Security considerations: Security considerations relating to the generation and consumption of PayID protocol messages are discussed in Section X.</t>

<t>Interoperability considerations:  This document specifies format of conforming messages and the interpretation thereof.</t>

<t>Published specification: This document is the specification for these media types; see Table 1 for the section documenting each media type.</t>

<t>Applications that use this media type:  PayID servers and PayID clients.</t>

<t>Additional information:</t>

<t>Magic number(s):  n/a</t>

<t>File extension(s):  This document uses the mime type to refer to protocol messages and thus does not require a file extension.</t>

<t>Macintosh file type code(s):  n/a</t>

<t>Person &amp; email address to contact for further information:  See Authors' Addresses section.</t>

<t>Intended usage:  COMMON</t>

<t>Restrictions on usage:  n/a</t>

<t>Author:  See Authors' Addresses section.</t>

<t>Change controller:  Internet Engineering Task Force (mailto:iesg@ietf.org).</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC8446;
&RFC7258;
&RFC7231;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC4732;


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

