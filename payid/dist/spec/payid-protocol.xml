<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.6 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC7258 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7258.xml">
<!ENTITY RFC7231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml">
<!ENTITY RFC4732 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4732.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-aanchal-payid-protocol-01" category="std">

  <front>
    <title>PayID Protocol</title>

    <author initials="A." surname="Malhotra" fullname="Aanchal Malhotra">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>amalhotra@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="D." surname="Schwartz" fullname="David Schwartz">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>david@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="June" day="13"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID protocol - an application-layer protocol, which can be used to interact with a PayID-enabled service provider. The primary use-case is to discover payment account information along with optional metadata identified by a PayID <xref target="PAYID-URI"></xref>. The protocol is based on HTTP transfer of PayID protocol messages over a secure transport.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a part of the <eref target="https://payid.org/">PayID Protocol</eref> work.
 Feedback related to this specification should be sent to <eref target="mailto:payid@ripple.com">payid@ripple.com</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">
<t>This protocol can be referred to as <spanx style="verb">Basic PayID Protocol</spanx> or <spanx style="verb">PayID Protocol</spanx>. The following terminology is used by this specification.</t>

<t><list style="symbols">
  <t>Endpoint: either the client or the server of the connection.
  <list style="symbols">
      <t>Sending Endpoint: sending side of the transaction (wallet or exchange).</t>
      <t>Receiving Endpoint: receiving side of the transaction (wallet or exchange).</t>
    </list></t>
  <t>PayID client: The endpoint that initiates PayID protocol.</t>
  <t>PayID owner: The owner of the PayID URI as described in <xref target="PAYID-URI"></xref>.</t>
  <t>PayID server: The endpoint that returns payment account information.</t>
</list></t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> and [RFC9174][].</t>

</section>
<section anchor="introduction" title="Introduction">
<t><xref target="PAYID-URI"></xref> describes a URI scheme to identify payment account(s) at a service provider. <xref target="PAYID-DISCOVERY"></xref>, on the other hand, defines how to transform a PayID URI into a PayID URL that can be used by other protocols to interact with a PayID-enabled service provider but does not define protocol(s) to do so.</t>

<t>This document specifies PayID protocol - an application-layer protocol which can be used to interact with a PayID-enabled service provider identified by PayID URL using standard HTTP methods over a secure transport. In its most basic mode, a PayID protocol resource returns a JavaScript Object Notation (JSON) object representing the payment account(s) information along with optional metadata corresponding to the queried PayID URI <xref target="PAYID-URI"></xref>. The protocol defines new media formatting types for requests and responses but uses normal HTTP content negotiation mechanisms for selecting alternatives that the PayID client and server may prefer in anticipation of serving new use cases.</t>

<section anchor="design-goals" title="Design Goals">

<t><list style="symbols">
  <t>Extensibility</t>
</list></t>

<t>Although, the primary use-case for payment account(s) information resource returned via Basic PayID protocol is assumed to be for making payments, the PayID protocol is designed to be easily extensible to facilitate creation and retrieval of other resources about the PayID owner, PayID client and/or PayID server that might be required for making payments.</t>

<t><list style="symbols">
  <t>Neutrality: Currency and Network Agnostic</t>
</list></t>

<t>PayID protocol is designed to be a fundamentally neutral protocol. PayID protocol is capable of returning a PayID owner's payment account(s) information for any network that they (or their service) support. This makes PayID protocol a network and currency agnostic protocol, capable of enabling payments in BTC, XRP, ERC-20 tokens, Lightning, ILP, or even fiat networks like ACH.</t>

<t><list style="symbols">
  <t>Decentralized &amp; Peer-to-Peer</t>
</list></t>

<t>Just like email servers, anyone can run their own PayID server or use third-party hosted services. If self-hosted, PayID protocol introduces no new counterparty risk or changes to a service’s security or privacy model. PayID protocol doesn’t require new, complex, and potentially unreliable peer discovery protocols, instead establishing direct peer-to-peer connections between communicating parties from the start.
   PayID is built on the most successful decentralized network: the web. There is no designated centralized authority, or a risk of a patchwork of different standards in different jurisdictions that make a global solution impossibly complex.</t>

<t><list style="symbols">
  <t>Service Sovereignty</t>
</list></t>

<t>Each service provider that uses PayID for their users maintains full control of its PayID URL space, PayID service and has the ability to incorporate any policy they choose, including privacy, authentication, and security.  They also have full sovereignty over users on their domain, just like in email. PayID is highly generalized and does not prescribe any particular solution outside of the standardized communication, which makes it compatible with existing compliance and user management tools and philosophies.</t>

</section>
</section>
<section anchor="payid-server-discovery" title="PayID Server Discovery">
<t>To support PayID protocol, the PayID client needs to discover the PayID URL corresponding to the PayID URI <xref target="PAYID-URI"></xref>. This can be obtained either using mechanisms described in <xref target="PAYID-DISCOVERY"></xref> or could be entered manually.</t>

</section>
<section anchor="json-format-design" title="JSON Format Design">
<t>JSON as described in [RFC8259][], defines a test format for serializing structured data. Objects are serialized as an unordered collection of name/value pairs. JSON does not define any semantics around the name/value pairs that make up an object. PayID protocol's JSON format defines name/value pairs that annotate a JSON object, property or array for PayID protocol resources.</t>

<t>The PayID client MUST request PayID response in JSON format through the <spanx style="verb">Accept</spanx> header with the media type as defined below, optionally followed by format parameters. One of the optional parameters is the case insensitive <spanx style="verb">q</spanx> value as described in Section 5.3.1 of <xref target="RFC7231"></xref>.</t>

<t>Each message body is represented as a single JSON object. This object contains name/value pair whose value is the correct representation for a primitive value as described in [RFC8259][], or an array or object as described in section below.</t>

<t>If the PayID server does not support JSON format, it MUST reply with an appropriate error response.</t>

<section anchor="http-method" title="HTTP Method">
<t>The PayID protocol payment account(s) information resource is requested using the HTTP GET method.</t>

<t>Following are the media types to request the payment account(s) information resource on different payment-networks and environments.</t>

</section>
<section anchor="media-type-of-payment-accounts-information-resource" title="Media Type of Payment Account(s) Information Resource">
<t>The media type for payment account information resource is <spanx style="verb">application/* + json</spanx>.</t>

</section>
<section anchor="response-for-application-json" title="Response for application/* + json">
<t>The response body for <spanx style="verb">application/* + json</spanx> is a JSON object with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  {  
   optional string payId,
   required Address[] addresses, 
   optional string memo,
   optional string identity,
   optional ProofOfControlSignature proofOfControlSignature
  }
]]></artwork></figure>

<section anchor="payid" title="payId">
<t>The value of <spanx style="verb">payId</spanx> field is the PayID URI in the client request that identifies the payment account information that the JSON object describes.</t>

<t>The <spanx style="verb">payId</spanx> field is an optional field in the response.</t>

</section>
<section anchor="addresses" title="addresses">
<t>The value of <spanx style="verb">addresses</spanx> field is a JSON array of type <spanx style="verb">Address</spanx> of one or more JSON objects with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  { 
   required string paymentNetwork,
   optional string environment, 
   required string addressDetailsType,
   required addressDetailsType addressDetails
  }
]]></artwork></figure>

<t><list style="symbols">
  <t>paymentNetwork: The value of payment-network as specified in the client request's <spanx style="verb">Accept</spanx> header</t>
  <t>environment: The value of environment as specified in the client request's <spanx style="verb">Accept</spanx> header</t>
  <t>addressDetailsType: The value of <spanx style="verb">addressDetailsType</spanx> is JSON object of one of the following types.
  <list style="symbols">
      <t>CryptoAddressDetails</t>
      <t>ACHAddressDetails</t>
    </list></t>
  <t>addressDetails: The value of <spanx style="verb">addressDetails</spanx> is the address information necessary to send payment on a specific payment-netowrk and environment.</t>
</list></t>

<t>The <spanx style="verb">addresses</spanx> field MUST be present in the response.</t>

<section anchor="addressdetailstype" title="addressDetailsType">
<t>We define the following two types of payment address types.</t>

<t><list style="symbols">
  <t>CryptoAddressDetails: This is a JSON object with the following name/value pairs.  <vspace blankLines='1'/>
{
  required string address,
  optional string tag
}  <list style="symbols">
      <t>address: The value of <spanx style="verb">address</spanx> field contains the on-ledger address corresponding.</t>
      <t>tag: The value of <spanx style="verb">tag</spanx> field is the tag value used by some cryptocurrencies to distinguish accounts contained within a singular address. E.g XRP's destination tag.</t>
    </list></t>
  <t>ACHAddressDetails: This is a JSON object with the following name/value pairs.  <vspace blankLines='1'/>
{
  required string accountNumber,
  required string routingNumber
}  <list style="symbols">
      <t>accountNumber: The value of <spanx style="verb">accountNumber</spanx> is the ACH account number.</t>
      <t>routingNumber: The value of <spanx style="verb">routingNumber</spanx> is the ACH routing number.</t>
    </list></t>
</list></t>

</section>
</section>
<section anchor="memo" title="memo">
<t>The <spanx style="verb">memo</spanx> string may specify additional metadata corresponding to a payment.</t>

<t>The <spanx style="verb">memo</spanx> string is an OPTIONAL field in the response.</t>

</section>
<section anchor="identity" title="identity">
<t>The <spanx style="verb">identity</spanx> string may specify any additional identity information about the PayID owner or PayID server.</t>

<t>The <spanx style="verb">identity</spanx> string is an OPTIONAL field in the response.</t>

</section>
<section anchor="proofofcontrolsignature" title="proofOfControlSignature">
<t>The value of <spanx style="verb">proofOfControlSignature</spanx> field is a JSON object of type <spanx style="verb">ProofOfControlSignature</spanx> with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  {
   required string publicKey,
   required string payID, 
   required string hashAlgorithm,
   required string signature
  }
]]></artwork></figure>

<t><list style="symbols">
  <t>publicKey: On-ledger public key of the Receiving Endpoint</t>
  <t>payID: PayID URI of the PayID owner</t>
  <t>hashAlgorithm: Hash algorithms used to hash the entire contents of the <spanx style="verb">ProofOfControlSignature</spanx> message.</t>
  <t>signature: Digital signature over the hash of the entire contents of the <spanx style="verb">ProofOfControlSignature</spanx> message using the private key corresponding to the public key in <spanx style="verb">publicKey</spanx>. This is a proof that the Receiving Endpoint is the owner of the on-ledger public key in <spanx style="verb">publicKey</spanx>.</t>
</list></t>

<t>The <spanx style="verb">proofOfControlSignature</spanx> is an OPTIONAL field in the response.</t>

</section>
</section>
<section anchor="meaning-of-media-type-application-json" title="Meaning of Media Type application/* + json">
<t><spanx style="verb">*</spanx> may represent different payment-networks and environments. In this document, we propose standards with the media types specific to XRP, ILP, and ACH payment networks. We also propose media type that returns all addresses across all payment networks. Other payment networks MUST establish standard media types for their networks at IANA.</t>

<t><list style="symbols">
  <t>Accept: application/payid-json
  Returns all payment account(s) information correspnding to the requested PayID URI</t>
  <t>Accept: application/xrpl-mainnet+json</t>
</list></t>

<t>Returns XRPL mainnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/xrpl-testnet+json</t>
</list></t>

<t>Returns XRPL testnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/xrpl-devnet+json</t>
</list></t>

<t>Returns XRPL devnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/interledger-testnet+json</t>
</list></t>

<t>Returns mainnet payment pointer to initiate SPSP request</t>

<t><list style="symbols">
  <t>Accept: application/interledger-devnet+json</t>
</list></t>

<t>Returns testnet payment pointer to initiate SPSP request</t>

<t><list style="symbols">
  <t>Accept: application/ach+json</t>
</list></t>

<t>Returns account and routing number</t>

<t>The PayID client MAY specify more than one media types along with the preference parameter. The server MUST respond as described in the Content Negotiation section below.</t>

</section>
</section>
<section anchor="header-fields" title="Header Fields">
<t>PayID protocol defines semantics around the following request and response headers. Additional headers MAY be defined, but have no unique semantics defined in the PayID protocol.</t>

<section anchor="common-headers" title="Common Headers">
<t>The following headers are common between PayID requests and responses.</t>

<section anchor="header-content-type" title="Header Content-Type">
<t>PayID requests and responses with a JSON message body MUST have a <spanx style="verb">Content-Type</spanx> header value of <spanx style="verb">application-json</spanx>.</t>

</section>
<section anchor="header-content-length" title="Header Content-Length">
<t>As defined in [RFC7230][], a request or response SHOULD include a <spanx style="verb">Content-Length</spanx> header when the message's length can be determined prior to being transferred. PayID protocol does not add any additional requirements over HTTP for writing Content-Length.</t>

</section>
<section anchor="header-payid-version-todo" title="Header PayID-version (TODO)">
<t>The PayID client MUST include the PayID version request header field to specify the version of the PayID protocol used to generate the request.</t>

<t>If present on a request, the PayID server MUST interpret the request according to the rules defined in the specified version of the PayID protocol or fail the request with an appropriate error response code.</t>

<t>If not specified in a request, the PayID server MUST fail the request with an appropriate error code.</t>

</section>
</section>
<section anchor="request-headers" title="Request Headers">
<t>In addition to common Headers, the PayID client MUST specify the following request header.</t>

<section anchor="header-accept" title="Header Accept">
<t>The PayID client MUST specify the <spanx style="verb">Accept</spanx> request header field with at least one of the registered media types (Section X). The purpose of this header is to indicate what type of content can be understood in the response. It specifies the <spanx style="verb">payment-network</spanx> and <spanx style="verb">environment</spanx> of the payment account and its representation format for which the PayID client wants to receive information. The representation format is always JSON.</t>

<t>PayID server MUST reject formats that specify unknown or unsupported format parameters.</t>

</section>
</section>
<section anchor="response-headers" title="Response Headers">
<t>In addition to the Common Headers, the PayID server MUST specify the following response header.</t>

<section anchor="header-cache-control" title="Header Cache-Control">
<t>PayID server MUST include the <spanx style="verb">Cache-Control</spanx> header with the max-age limit of 0. The intermediate hops or PayID client MUST not cache the responses.</t>

</section>
</section>
</section>
<section anchor="extensibility" title="Extensibility">

<section anchor="payload-extensibility" title="Payload Extensibility">
<t>PayID protocol supports extensibility in the payload, according to the specific format.</t>

<t>Regardless of the format, additional content MUST NOT be present if it needs to be understood by the receiver in order to correctly interpret the payload according to the specified PayID-Version header. Thus, clients MUST be prepared to handle or safely ignore any content not specifically defined in the version of the payload specified by the PayID-version header.</t>

</section>
<section anchor="header-field-extensibility" title="Header Field Extensibility">
<t>PayID protocol defines semantics around certain HTTP request and response headers. Services that support a version of PayID protocol conform to the processing requirements for the headers defined by this specification for that version.</t>

<t>Individual services MAY define custom headers. These headers MUST NOT begin with PayID. Custom headers SHOULD be optional when making requests to the service. A service MUST NOT require the PayID client to understand custom headers to accurately interpret the response.</t>

</section>
<section anchor="format-extensibility" title="Format Extensibility">
<t>A PayID service MUST support JSON format as described above and MAY support additional formats response bodies.</t>

</section>
</section>
<section anchor="basic-payid-protocol" title="Basic PayID Protocol">
<t>Basic PayID protocol is used to request payment account(s) information resource identified by a PayID URI from a PayID-enabled service provider identified by a PayID URL using HTTP over secure transport. When successful, PayID protocol always returns the JSON representation of payment account(s) information resource along with optional metadata. This information can be used for any purposes outside the scope of this document.</t>

<t>Basic PayID protocol comprise of request and response messages, each of which is defined in more detail below. The following is a visual representation of the basic protocol flow:</t>

<figure><artwork><![CDATA[
PayID client                                         PayID server
   |                                                          |
   |              1.) GET request to PayID URL                |
   |--------------------------------------------------------->|
   |                                                          | |                                                          |
   |              2.) 200 Ok                                  |
   |                  Payment account information response    |
   |<---------------------------------------------------------|
   |                                                          |
   |                                                          | 
]]></artwork></figure>

<section anchor="step-1-http-request-to-payid-url-using-http-get-method" title="Step 1: HTTP Request to PayID URL using HTTP GET Method">
<t>A basic PayID client issues a query using the HTTP GET method to the PayID URL without any query parameters and body.</t>

<t>The PayID client MUST query the PayID server using HTTPS only. <xref target="RFC2818"></xref> defines how HTTPS verifies the PayID server's identity. If the HTTPS connection cannot be established for any reason, then the PayID client MUST accept that the PayID request has failed and MUST NOT attempt to reissue the PayID request using HTTP over a non-secure connection.</t>

</section>
<section anchor="step-2-payment-account-information-response" title="Step 2: Payment Account Information Response">
<t>In response, the PayID server returns a JSON object representation of the payment account(s) information resource for the payment-network and environment requested by PayID client in the request <spanx style="verb">Accept</spanx> header field along with other required and/or optional meta data.</t>

<t>PayID servers MUST be able to process <spanx style="verb">application/payid+json</spanx> header type.</t>

<t>If the PayID server does not contain the payment account information corresponding to the request, the PayID server MUST respond with an appropriate error message.</t>

<t>A PayID server MAY redirect the PayID client; if it does, the redirection MUST only be to an <spanx style="verb">https</spanx> URI and the PayID client MUST perform certificate validation again when redirected.</t>

</section>
<section anchor="step-3-parse-payment-account-information-response" title="Step 3: Parse Payment Account Information Response">
<t>If the PayID server returns a valid response, the response will contain one or more of fields defined above.</t>

</section>
</section>
<section anchor="example-use-of-basic-payid-protocol" title="Example Use of Basic PayID Protocol">
<t>This section shows sample use of Basic PayID protocol in several
   hypothetical scenarios.</t>

<section anchor="basic-payid-protocol-by-a-wallet" title="Basic PayID Protocol by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet provider that Alice has an account on. Alice would log-in to the wallet provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the wallet UI to start the payment. 
   The Wallet application would first discover the PayID URL for the PayID service-provider using one of the mechanisms described in PayID discovery <xref target="PAYID-DISCOVERY"></xref> protocol.</t>

<t>The Wallet application would then issue an HTTPS GET request:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.receiver.example.com
 Accept: application/payid+json
 PayID-version: 1.0
]]></artwork></figure>

<t>The PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-version: 1.0
 Cache-Control: max-age=0
 Server: Apache/1.3.11
 {
   "payId" : "bob$receiver.example.com",
   "addresses" :
   [
     {  
       "paymentNetwork" : "xrpl",
       "environment" : "testnet",
       "addressDetailsType" : "CryptoAddressDetails",
       "addressDetails" : {
                    "address" : "XTVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"
            }
      },
     {
       "paymentNetwork" : "ach",
       "environment" : "mainnet",
       "addressDetailsType" : "ACHAddressDetails",
       "addressDetails" : {
                    "accountNumber" : "5674536253",
                    "routingNumber" : "aYJTDFGLKAJD"
            }
      }
    ],
    "memo" : "Additional optional Information"
 }
]]></artwork></figure>

<t>In the above example we see that the PayID server returned a list of payment accounts identified by PayID <spanx style="verb">bob$receiver.example.com</spanx>. This is because Alice's Wallet asked for all the payment accounts corresponding to the PayID in the <spanx style="verb">Accept</spanx> header. 
  Alice's Wallet MAY then use the payment account information to make payments.</t>

<t>Another example:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.receiver.example.com
 Accept: application/xrpl-testnet+json; q=0.4,
         application/ach+json; q=0.1
 PayID-version= 1.0
]]></artwork></figure>

<t>The PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-version: 1.0
 Cache-Control: max-age=0
 Server: Apache/1.3.11
 {
   "payId" : "bob$receiver.example.com",
   "addresses" :
   [
     {  
       "paymentNetwork" : "xrpl",
       "environment" : "testnet",
       "addressDetailsType" : "CryptoAddressDetails",
       "addressDetails" : {
                    "address" : "XTVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"
            }
      }
    ]
 }
]]></artwork></figure>

</section>
</section>
<section anchor="common-response-status-codes-todo" title="Common Response Status Codes (TODO)">
<t>A PayID server MAY respond to request using any valid HTTP response code appropriate for the request. The PayID server SHOULD be as specific as possible in its choice of an HTTP specific status code.</t>

<section anchor="success-responses" title="Success Responses">
<t>The following response codes represent successful requests.</t>

<section anchor="response-code-200-ok" title="Response Code 200 OK">
<t>A request that does not create a resource returns 200 OK if it is completed successfully and the value of the resource is not null. null. In this case, the response body MUST contain the value of the resource specified in the request URL.</t>

</section>
<section anchor="response-code-3xx-redirection" title="Response Code 3xx Redirection">
<t>As per <xref target="RFC7231"></xref>, a 3xx Redirection indicates that further action needs to be taken by the client in order to fulfill the request. In this case, the response SHOULD include a Location header, as appropriate, with the URL from which the result can be obtained; it MAY include a Retry-After header.</t>

</section>
</section>
<section anchor="client-error-responses" title="Client Error Responses">
<t>Error codes in the 4xx range indicate a client error, such as a malformed request. 
  In the case that a response body is defined for the error code, the body of the error is as defined for the appropriate format.</t>

</section>
</section>
<section anchor="content-negotiation" title="Content Negotiation">

<t>The PayID client MAY choose to query for all possible payment addresses corresponding to a PayID URI</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/all+json                 
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with all payment account(s) information associated with the queried PayID.</t>

<t>Alternatively, the PayID client MAY choose to query for a subset payment account(s) information in the order of preference.</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/xrpl-testnet+json; q=0.4,
         application/xrpl-mainnet+json; q= 0.1
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with the payment account(s) information corresponding to one of the payment-network and environment mentioned in the <spanx style="verb">Accept</spanx> header in the order of client request preference. If none of those exist, PayID server MUST send an appropriate error response.</t>

<t>Alternatively, the PayID client MAY combine the above two approaches.</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/xrpl-testnet+json; q=0.4,
         application/xrpl-mainnet+json; q= 0.1,
         application/payid+json
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with the payment account information corresponding to one of the payment-network and environment mentioned in the <spanx style="verb">Accept</spanx> header in the order of PayID client's preference. If none of those exist, then the PayID server MUST respond with payment account(s) information corresponding to all payment accounts associated with the queried PayID URI.</t>

</section>
<section anchor="versioningtodo" title="Versioning(TODO)">

<t>Versioning enables clients and servers to evolve independently. PayID protocol defines semantics for protocol versioning.</t>

<t>PayID requests and responses are versioned according to the PayID-version header.
 PayID clients include the PayID-version header in order to specify the maximum acceptable response version. PayID servers respond with the maximum supported version that is less than or equal to the requested <spanx style="verb">major</spanx></t>

</section>
<section anchor="security-considerations" title="Security Considerations">
<t>This security considerations section only considers PayID clients and servers bound to implementations as defined in this document. Such implementations have the following characteristics:</t>

<t><list style="symbols">
  <t>PayID URIs are static and well-known to the PayID client; PayID server URLs can be static or discovered.</t>
</list></t>

<t>The following is considered out-of-scope:</t>

<t><list style="symbols">
  <t>Communication between the PayID owner and the wallet or exchange (which acts as PayID server) for PayID URI registration, etc.</t>
  <t>Communication between the sender of the transaction and PayID client to transfer information such as PayID URI and other transaction details, etc.</t>
  <t>PayID server URL discovery by PayID client. Implementations using PayID-Discovery <xref target="PAYID-DISCOVERY"></xref> MUST consider the security considerations in the corresponding document.</t>
  <t>PayID server URL resolution by PayID client. Implementations using DNS, DNSSEC, DoH, DoT, etc. MUST consider the security considerations of the corresponding documents.</t>
</list></t>

<section anchor="network-attacks" title="Network Attacks">
<t>Basic PayID protocol's security model assumes the following network attackers:</t>

<t><list style="symbols">
  <t>Off-path attacker: An off-path attacker can be anywhere on the network. She can inject and spoof packets but can not observe, or tamper with the legitimate traffic between the PayID client and the server.</t>
  <t>On-path attacker: An on-path attacker can eavesdrop, inject, spoof and replay packets, but can not drop, delay or tamper with the legitimate traffic.</t>
  <t>In-path or Man-in-the-middle (MiTM) attacker: An MiTM is the most powerful network attacker. An MiTM has full access to the communication path between the PayID client and the server. She can observe, modify, delay and drop network packets.</t>
</list></t>

<t>Additionally we assume that the attacker has enough resources to mount an attack but can not break the security guarantees provided by the cryptographic primitives of the underlying secure transport.</t>

<t>The basic PayID protocol runs over HTTPS and thus relies on the security of the underlying transport. Implementations utilizing TLS 1.3 benefit from the TLS security profile defined in [RFC 8446][] against all the above network attackers.</t>

<section anchor="denial-of-service-dos-attacks" title="Denial-of-Service (DoS) attacks">
<t>As such cryptography can not defend against DoS attacks because any attacker can stop/interrupt the PayID protocol by:
  * Dropping network packets, 
  * Exhaustion of resources either at the network level or at PayID client and/or server.</t>

<t>The PayID servers are recommended to follow general best network configuration practices to defend against such attacks <xref target="RFC4732"></xref>.</t>

</section>
</section>
<section anchor="information-integrity" title="Information Integrity">
<t>The HTTPS connection provides transport security for the interaction between PayID client and server but does not provide the response integrity of the data provided by PayID server. A PayID client has no way of knowing if data provided in the payment account information resource has been manipulated at the PayID server, either due to malicious behaviour on the part of PayID server administrator or as a result of being compromised by an attacker. As with any information service available on the Internet, PayID clients should be wary of the information received from untrusted sources.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">
<t>The PayID client and server should be aware that placing information on the Internet means that any one can access that information. While PayID protocol is an extremely useful tool to discovering payment account(s) information corresponding to a human-rememberable PayID URI, PayID owners should also understand the associated privacy risks. The easy access to payment account information via PayID protocol was a design goal of the protocol, not a limitation.</t>

<section anchor="access-control" title="Access Control">
<t>PayID protocol MUST not be used to provide payment account(s) information corresponding to a PayID URI unless providing that data via PayID protocol by the relevant PayID server was explicitly authorized by the PayID owner. If PayID owner wishes to limit access to information, PayID servers MAY provide an interface by which PayID owners can select which information is exposed through the PayID server interface. For example, PayID servers MAY allow PayID owners to mark certain data as <spanx style="verb">public</spanx> and then utilize that marking as a means of determining what information to expose via PayID protocol. The PayID servers MAY also allow PayID owners to provide a whitelist of users who are authorized to access the specific information. In such a case, the PayID server MUST authenticate the PayID client.</t>

</section>
<section anchor="payment-address-rotation" title="Payment Address Rotation">
<t>The power of PayID protocol comes from providing a single place where others can find payment account(s) information correspondong to a PayID URI, but PayID owners should be aware of how easily payment account information that one might publish can be used in unintended ways. As one example, one might query a PayID server only to see if a given PayID URI is valid and if so, get the list of associated payment account information. If the PayID server uses the same payment address each time, it becomes easy for third-party to track one's entire payment history. The PayID server SHOULD follow the best practice of payment address rotation for every query to mitigate this privacy concern.</t>

</section>
<section anchor="on-the-wire" title="On the Wire">
<t>PayID protocol over HTTPS encrypts the traffic and requires mutual authentication of the PayID client and the PayID server. This mitigates both passive surveillance <xref target="RFC7258"></xref> and the active attacks that attempt to divert PayID protocol queries to rogue servers.</t>

<t>Additionally, the use of the HTTPS default port 443 and the ability
  to mix PayID protocol traffic with other HTTPS traffic on the same connection can deter unprivileged on-path devices from interfering with PayID operations and make PayID traffic analysis more difficult.</t>

</section>
<section anchor="in-the-payid-server" title="In the PayID Server">
<t>The Basic PayID protocol data contains no information about the PayID client; however, various transports of PayID queries and responses do provide data that can be used to correlate requests. A Basic PayID protocol implementation is built on IP, TCP, TLS and HTTP. Each layer contains one or more common features that can be used to correlate queries to the same identity.</t>

<t>At the IP level, the PayID client address provides obvious correlation information. This can be mitigated by usee of NAT, proxy, VPN, or simple address rotation over time. It may be aggravated  by use of a PayID server that can correlate real-time addressing information with other identifiers, such as when PayID server and other services are operated by the same entity.</t>

<t>PayID client implementations that use one TCP connection for multiple PayID requests directly group those requests. Long-lived connections have better performance behaviours than short-lived connections; however they group more requests, which can expose more information to correlation and consolidation. TCP-based solutions may also seek performance through the use of TCP Fast Open [RFC7413][]. The cookies used in TCP Fast open may allow PayID servers to correlate TLS connections together.</t>

<t>TCP-based implementations often achieve better handshake performance throught the use of some form of session resumption mechanism, such as Section 2.2 of <xref target="RFC8446"></xref>. Session resumption creates trivial mechanism for a server to correlate TLS connections together.</t>

<t>HTTP's feature set can also be used for identification and tracking in a number of ways. For example, Authentication request header fields explicitly identify profiles in use, and HTTP cookies are designed as an explicit state-tracking mechanism and are often used as an authentication mechanism.</t>

<t>Additionally, the <spanx style="verb">User-Agent</spanx> and <spanx style="verb">Accept-Language</spanx> request header fields often convey specific information about the PayID client version or locale. This allows for content-negotiation and operational work-arounds for implementation bugs. Request header fields that control caching can expose state information about a subset of the client's history. Mixing PayID queries with other HTTP requests on the same connection also provides an opportunity for richer data correlation.</t>

<t>The PayID protocol design allows implementations to fully leverage the HTTP ecosystem, including features that are not enumerated in this document. Utilizing the full set of HTTP featurees enables PayID to be more than HTTP tunnel, but it is at the cost of opening up implementations to the full set of privacy considerations of HTTP.</t>

<t>Implementations of PayID clients and servers need to consider the benefits and privacy impacts of these fetaures, and their deployment context, when deciding whether or not to enable them. Implementations are advised to expose the minimal set of data needed to achieve the desired feature set.</t>

<t>Determining whether or not PayID client implementation requires HTTP cookie [RFC6265][] support is particularly important because HTTP cookies are the primary state tracking mechanism in HTTP, HTTP cookies SHOULD NOT be accepted by PayID clients unless they are explicitly required by a use case.</t>

<t>Overall, the PayID protocol does not introduce privacy concerns beyond those associated with using the underlying IP, TCP, TLS and HTTP layers.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">
<t>This document defines registries for PayID protocol version and application/* +json media types.</t>

<section anchor="header-field-registration" title="Header Field Registration">
<t>Header field name: PayID-version: major.minor</t>

<t>Applicable Protocol: "PayID protocol"</t>

<t>Status: <spanx style="verb">standard</spanx></t>

<t>Author/Change controller: Refer to the contact details of the authors in this document.</t>

<t>Specification Document: <spanx style="verb">PayID protocol</spanx></t>

</section>
<section anchor="media-type-registration" title="Media Type Registration">
<t>This document registers multiple media types, listed in Table 1.</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Subtype</ttcol>
      <ttcol align='left'>Specification</ttcol>
      <c>application</c>
      <c>xrpl-mainnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>xrpl-testnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>xrpl-devnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>ach+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>interledger-mainnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>interledger-testnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>payid+json</c>
      <c>&#160;</c>
</texttable>

<t>Type Name: application</t>

<t>Subtype name: This document registers multiple subtypes as listed in table 1</t>

<t>Required parameters: n/a</t>

<t>Optional parameters: n/a</t>

<t>Encoding considerations:  Encoding considerations are identical to those specified for the "application/json" media type. See[RFC7159][].</t>

<t>Security considerations: Security considerations relating to the generation and consumption of PayID protocol messages are discussed in Section X.</t>

<t>Interoperability considerations:  This document specifies format of conforming messages and the interpretation thereof.</t>

<t>Published specification: This document is the specification for these media types; see Table 1 for the section documenting each media type.</t>

<t>Applications that use this media type:  PayID servers and PayID clients.</t>

<t>Additional information:</t>

<t>Magic number(s):  n/a</t>

<t>File extension(s):  This document uses the mime type to refer to protocol messages and thus does not require a file extension.</t>

<t>Macintosh file type code(s):  n/a</t>

<t>Person &amp; email address to contact for further information:  See Authors' Addresses section.</t>

<t>Intended usage:  COMMON</t>

<t>Restrictions on usage:  n/a</t>

<t>Author:  See Authors' Addresses section.</t>

<t>Change controller:  Internet Engineering Task Force (mailto:iesg@ietf.org).</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC8446;
&RFC7258;
&RFC7231;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC4732;


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

