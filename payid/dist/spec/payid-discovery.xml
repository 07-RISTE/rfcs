<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4627 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4627.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC7033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7033.xml">
<!ENTITY RFC7230 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7230.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
<!ENTITY RFC6415 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6415.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-fuelling-payid-discovery-01" category="std">

  <front>
    <title>PayID Discovery</title>

    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>fuelling@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="April" day="21"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID Discovery protocol, which can be used
to discover information about a 'payid' URI using standard HTTP methods.</t>

<t>The primary use-case of this protocol is to define how to transform a 
PayID URI into a URL that can be used with other protocols.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a part of the <eref target="https://payid.org/">PayID Protocol</eref> work.
 Feedback related to this specification should be sent to <eref target="mailto:payid@ripple.com">payid@ripple.com</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">
<t>PayID Discovery is used to transform a PayID URI <xref target="PAYID-URI"></xref> into a
   URL (defined below as a PayID Discovery URL) that can then be used by 
   higher-order protocols to discover metadata about a service provider.</t>

<t>This document specifies two modes of PayID discovery: one using
   Webfinger <xref target="RFC7033"></xref> to resolve a corresponding PayID Discovery URL
   from a PayID using an automated fashion. The second modes uses a manual, 
   fallback mechanism to assemble a PayID Discovery URL from a PayID by-hand.</t>

<t>In 'automated' mode, a PayID can be presented to a service endpoint that
   supports PayID Discovery. The resource returns a Webfinger-compliant 
   JavaScript Object Notation (JSON) <xref target="RFC4627"></xref> object that can be used
   to perform PayID Discovery as defined in section 4.1 of this document.</t>

<t>Conversely, in "manual" mode, a PayID can be decomposed into a URL, without
   any intermediate server interaction, by simply transposing portions of a
   PayID URI into a URL format. This procedure is defined in section 4.2 of
   this document.</t>

<t>It should be noted that "manual" mode does not allow divergence between the
   string characters in a PayID URI and any corresponding URL. Conversely, 
   "automated" mode does allow such divergence, and is thus more powerful. For
   example, in "manual" mode, the PayID 'alice$example.com' MUST always map
   to the URL 'https://example.com/alice', whereas in "automated" mode
   that same PayID URI can map to any arbitrary URL structure determined
   buy the service provider, such as 'https://example.com/users/alice'.</t>

<t>Information returned via PayID Discovery might be used for direct human
   consumption (e.g., looking up someone's Bitcoin address), or it might be
   used by systems to help carry out some operation (e.g., facilitating,
   with additional security mechanisms, protocols to support compliance or 
   other legal requirements necessary to facilitate a payment).</t>

<t>The information returned via this protocol is intended to be static
   in nature. As such, PayID Discovery is not intended to be used to return
   dynamic information like a payment account balance or the current
   status of an account.</t>

<t>PayID Discovery is designed to be used across many applications. Use of 
   PayID Discovery is illustrated in the examples in Section 3 and
   described more formally in Section 4.</t>

</section>
<section anchor="terminology" title="Terminology">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   <xref target="RFC2119"></xref>.</t>

</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows sample uses of PayID Discovery in several
   hypothetical scenarios.</t>

<section anchor="payid-discovery-by-a-wallet" title="PayID Discovery by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet
   provider that Alice has an account on. Alice would log-in to the wallet
   provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the
   wallet UI to start the payment.</t>

<t>The Wallet application would first perform a WebFinger query looking for 
   the PayID Discovery service provider, like this:</t>

<figure><artwork><![CDATA[
 GET /.well-known/webfinger?
       resource=payid%3Abob%24receiver.example.com
       HTTP/1.1
 Host: receiver.example.com
]]></artwork></figure>

<t>The server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:bob$receiver.exmaple.com",
   "links" :
   [
     {  
       "rel": "http://payid.org/rel/discovery/1.0",
       "template": "https://receiver.exmaple.com/users/{acctpart}"
     }
   ]
 }
]]></artwork></figure>

<t>Alice's wallet then uses URL template found in the <spanx style="verb">template</spanx> property to 
   assemble a PayId-specific URL, <spanx style="verb">https://receiver.exmaple.com/users/bob</spanx>.</t>

<t>Per <xref target="RFC7033"></xref>, Webfinger requests can be filtered by using a "rel" 
   parameter in the Webfinger request. Because support for the "rel" parameter
   is not required nor guaranteed, the client must not assume the "links" 
   array will contain only the link relations related to PayID Discovery.</t>

</section>
<section anchor="payid-discovery-with-default-template" title="PayID Discovery with Default Template">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet
  provider that Alice has an account on. However, in this example, let's
   assume that the PayID Alice is wanting to pay doesn't support "automated"
   PayID discovery (i.e., the receiver's server doesn't support Webfinger).</t>

<t>Alice would log-in to her wallet provider and enter Bob's PayID (say
   <spanx style="verb">bob$receiver.example.com</spanx>) to make a payment.</t>

<t>The Wallet application would first attempt a WebFinger query as in the 
   example above, like this:</t>

<figure><artwork><![CDATA[
   GET /.well-known/webfinger?
         resource=payid%3Abob%24receiver.example.com&
         HTTP/1.1
   Host: receiver.example.com
]]></artwork></figure>

<t>However, in this case the <spanx style="verb">receiver.exapmle.com</spanx> server doesn't support 
   "automated" PayID Discovery, so the server responds like this:</t>

<figure><artwork><![CDATA[
   HTTP/1.1 404 NOT FOUND
]]></artwork></figure>

<t>Because Alice's Wallet can utilize "manual" PayID Discovery, the wallet
   software merely transforms <spanx style="verb">bob$receiever.example.com</spanx> into the URL 
   <spanx style="verb">https://receiver.example.com/bob</spanx>. Alice's wallet then uses that URL to 
   continue making a PayID payment.</t>

<t>It should be noted that "manual" mode does not allow the PayID URI to
   diverge from the underlying URL returned via PayID Discovery. Because of
   this, "automated" PayID Discovery is generally preferred.</t>

</section>
</section>
<section anchor="payid-discovery-protocol" title="PayID Discovery Protocol">
<t>The PayID Discovery protocol is used to request information about an entity
  identified by a PayID URI.</t>

<t>When successful, PayID Discovery always yields a PayID URL, which is a
  URI as defined by <xref target="RFC3986"></xref> using the 'https' scheme defined in
  <xref target="RFC7230"></xref>. A PayID URL can be used for any purposes outside the scope of
  this document.</t>

<t>PayID Discovery is performed using one of two modes: "interactive" or
  "fallback." Clients MUST attempt "interactive" mode first. If that
  mode fails to yield a PayID URL, then "fallback" mode MAY be used as an
  alternative discovery mechanism.</t>

<section anchor="interactive-mode" title="Interactive Mode">
<t>Interactive PayID Discovery is broken up into a series of steps, each of
  which is defined in more detail below. The following is a visual
  representation of the protocol flow:</t>

<figure><artwork><![CDATA[
                    +--------------------------+                    
                    |        PayID URI         |                    
                    |    alice$example.com     |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |         Assemble         |                    
                    |   PayID Discovery URL    |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |          Query           |                    
              +-----|   PayID Discovery URL    |-----+              
              |     +--------------------------+     |              
              |                                  Success            
              |                                      |              
              |                                      v              
              |                        +---------------------------+
          Failure                      |   Parse PayID Metadata    |
              |                        +---------------------------+
              |                                      |              
              |                                      v              
              |                        +---------------------------+
              |                        | Select PayID URI Template |
              |                        +---------------------------+
              |                                      |              
              v                                      v              
+--------------------------+           +---------------------------+
| Fallback PayID Discovery |           |    Assemble PayID URL     |
+--------------------------+           +---------------------------+
              |                                      |              
              +---------------------+----------------+              
                                    |                               
                                    v                               
                      +---------------------------+                 
                      |         PayID URL         |                 
                      | https://example.com/alice |                 
                      +---------------------------+                 
]]></artwork></figure>

<section anchor="step-1-assemble-payid-discovery-url" title="Step 1: Assemble PayID Discovery URL">
<t>PayID Discovery utilizes the Webfinger <xref target="RFC7033"></xref> specification in a 
  narrowly defined profile.</t>

<t>This document defines a PayID Discovery URL as being a Webfinger 
  resource URI where the specified resource value is a valid PayID 
  URI <xref target="PAYID-URI"></xref>.</t>

<t>For example, the PayID Discovery URI for alice$example.com is</t>

<figure><artwork><![CDATA[
 https://example.com/.well-known/webfinger?resource=payid%3Abob%24.example.com
]]></artwork></figure>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Disovery URL,
  as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
  as the resource representation to convey information about the requested 
  PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, then
  interactive PayID Discovery is considered to have failed. Clients SHOULD 
  attempt to assemble a PayID URL using "fallback" mode as defined in section
  4.2.1 of this document.</t>

</section>
<section anchor="step-3-parse-payid-metadata" title="Step 3: Parse PayID Metadata">
<t>If the PayID Discovery server returns a valid response, the response will
  contain one or more of the JRDs defined in section 5 of this document.</t>

<t>If any of the JRDs contain a 'rel' value that represents a PayID URL
  Template, then that template value MUST be used in the next protocol step.</t>

<t>Failing the above, if the 'rel' value of any JRDs represents a PayID
  Discovery URL, then that URL MUST be used in step 2 above, repeated
  recursively if needed, until a valid PayID URI Template is obtained. 
  That URI Template value MUST be used in the next protocol step.</t>

</section>
<section anchor="step-4-assemble-payid-url" title="Step 4: Assemble PayID URL">
<t>A PayID URL is constructed by applying the PayID URI to the PayID URI
   Template string obtained via the steps above. The PayID URI template MAY
   contain a URI string without any variables to represent a host-level
   PayID URL that is identical for every PayID URI on a particular host.</t>

<t>For example, a PayID Discovery endpoint that only supports a single account
   might use a URI template string with no variables, like this:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-url-template/1.0",
  "template": "https://example.com/alice"
}
]]></artwork></figure>

<t>The result of this step is the PayID URL. Once obtained, PayID Discovery
   is considered to have completed successfully.</t>

<section anchor="template-syntax" title="Template Syntax">
<t>This specification defines a simple template syntax for PayID URI
   transformation.  A template is a string containing brace-enclosed
   ("{}") variable names marking the parts of the string that are to be
   substituted by the corresponding variable values.</t>

<t>This specification defines a one variable – "acctpart" – which 
   corresponds to the 'acctpart' of a PayID URI as defined in <xref target="PAYID-URI"></xref>.</t>

<t>When substituting the 'acctpart' value into a URI 'path' as defined by
   <xref target="RFC3986"></xref>, values MUST NOT be percent or otherwise encoded because the
   'acctpart' value of a PayID URI always conforms to the character set
   allowed by paths in <xref target="RFC3986"></xref>.</t>

<t>However, before substituting template variables into a URI 'query' part,
   values MUST be encoded using UTF-8, and any character other than
   unreserved (as defined by <xref target="RFC3986"></xref>) MUST be percent-encoded per <xref target="RFC3986"></xref>.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT 
   change the meaning of the 'acctpart' variable. If a client is unable to
   successfully process a template (e.g., unknown variable names, unknown or 
   incompatible syntax), the JRD SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char ) ; "acctpart" or
                                                              other names
variable     =  "{" var-name "}"
PAYID-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    alice$example.org
 Template: https://example.org/{acctpart}
 Output:   https://example.org/alice
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="fallback-mode" title="Fallback Mode">
<t>If "Interactive" mode is not supported or otherwise fails to yield a PayID
  URL, then a PayID URL MAY be assembled manually using the following
  predefined ruleset:</t>

<t><list style="numbers">
  <t>Decompose the PayID URI into its component parts, per <xref target="PAYID-URI"></xref>, 
capturing the 'acctpart' and 'host' values.</t>
  <t>Using the 'acctpart' and 'host', assemble a URL by substituting each
   value into the following string using no special encoding or other
   character adjustments: <spanx style="verb">https://{host}/{acctpart}</spanx>.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    bob.primary$example.org
 Output:   https://example.org/bob.primary
]]></artwork></figure>

<t>The resulting URL is a PayID URL.</t>

<section anchor="fallback-assembly-flow" title="Fallback Assembly Flow">
<t>The following is a visual representation of the Fallback Assembly protocol
  flow:</t>

<figure><artwork><![CDATA[
+--------------------------+ 
|        PayID URI         | 
|    alice$example.com     | 
+--------------------------+ 
              |              
              v              
+--------------------------+ 
|Manual PayID URL Assembly | 
+--------------------------+ 
              |              
              v              
+---------------------------+
|         PayID URL         |
| https://example.com/alice |
+---------------------------+
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="payid-discovery-jrds" title="PayID Discovery JRDs">
<t>This document defines two JRDs that conform to section 4.4 of the
  Webfinger RFC.</t>

<section anchor="jrd-for-payid-discovery-url" title="JRD for PayID Discovery URL">
<t>This type of JRD can be used to represent a URL that is a PayID Discovery
  URL. This is useful for delegating PayID Discovery to another service
  endpoint:</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">http://payid.org/rel/payid-discovery-url/1.0</spanx></t>
  <t>'href': A PayID Discovery URL that clients can dereference to perform
        interactive PayID Discovery.</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID Discovery URL:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-discovery-url/1.0",
  "href": "https://delegate.example.com/.well-known/webfinger?resource=
           payid%3Aalice%24example.com"
}
]]></artwork></figure>

</section>
<section anchor="jrd-for-payid-uri-template" title="JRD for PayID URI Template">
<t>This type of JRD can be used to represent a URL that is a PayID URL
  Template.</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">http://payid.org/rel/payid-url-template/1.0</spanx></t>
  <t>'template': A PayID URI Template</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID URI Template:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-url-template/1.0",
  "template": "https://example.com/{acctpart}"
}                
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Discovery.</t>

<t>Among other resource, consult section 9 of <xref target="RFC7033"></xref> and section 7 of
<xref target="RFC3986"></xref> for important security considerations involved in PayID
Discovery.</t>

<section anchor="hosted-payid-discovery-services" title="Hosted PayID Discovery Services">
<t>As with most services provided on the Internet, it is possible for a domain
owner to utilize "hosted" WebFinger services. Consult section 7 of 
<xref target="RFC7033"></xref> for considerations that could apply to both "manual" and
"automated" PayID Discovery when hosted by a third-party.</t>

</section>
<section anchor="cross-origin-resource-sharing-cors" title="Cross-Origin Resource Sharing (CORS)">
<t>PayID Discovery resources might not be accessible from a web browser due to
"Same-Origin" policies. See section 5 of <xref target="RFC7033"></xref> for CORS considerations
that apply to both "manual" and "automated" PayID Discovery modes.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of <xref target="RFC7033"></xref> for Access Control
considerations that could apply to both "manual" and "automated" PayID
Discovery modes.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="new-link-relation-types" title="New Link Relation Types">
<t>This document defines the following Link relation type per <xref target="RFC7033"></xref>:</t>

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">http://payid.org/rel/discovery/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/payid-uri-template</spanx></t>
  <t>Description: PayID Discovery URI Template, version 1.0</t>
</list></t>

<t>See section 3 for examples of this type of Link.</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>This document was heavily influenced by, and builds upon, Webfinger
<xref target="RFC7033"></xref> (adapted for a payments use-case) as well as the supporting
RFCs that it relies upon and that influenced it, especially <xref target="RFC5988"></xref> and
<xref target="RFC6415"></xref>. The author would like to acknowledge the contributions of 
everyone who worked on those and any related specifications.</t>

<t>In addition, the author would like to acknowledge everyone who provided
feedback and use-cases for this derivative specification.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC3986;
&RFC4627;
&RFC6570;
&RFC7033;
&RFC7230;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;
&RFC6415;


    </references>



  </back>

<!-- ##markdown-source:
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
B7d0vDT2DhkNVpf6ioe8W0jE0f8AJELsqwdLAAA=

-->

</rfc>

