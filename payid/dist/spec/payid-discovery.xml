<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4627 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4627.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC7033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7033.xml">
<!ENTITY RFC7230 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7230.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
<!ENTITY RFC6415 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6415.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-fuelling-payid-discovery-01" category="std">

  <front>
    <title>PayID Discovery</title>

    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>fuelling@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="May" day="04"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID Discovery protocol, which can be used
to discover information about a 'payid' URI using standard HTTP methods.</t>

<t>The primary use-case of this protocol is to define how to transform a 
PayID URI into a URL that can be used with other protocols.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a part of the <eref target="https://payid.org/">PayID Protocol</eref> work.
 Feedback related to this specification should be sent to <eref target="mailto:payid@ripple.com">payid@ripple.com</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">
<t>PayID Discovery is used to transform a PayID URI <xref target="PAYID-URI"></xref> into a
   URL (defined below as a PayID Discovery URL) that can then be used by 
   higher-order protocols to discover metadata about a PayID-enabled service
   provider.</t>

<t>This document specifies two modes of PayID discovery: one using
   Webfinger <xref target="RFC7033"></xref> to resolve a corresponding PayID Discovery URL
   from a PayID using an interactive protocol. The second mode uses a manual 
   mechanism to assemble a PayID Discovery URL from a PayID by-hand.</t>

<t>In 'interactive' mode, a PayID can be presented to a Webfinger-enabled 
   service endpoint that supports PayID Discovery. The resource returns a
   Webfinger-compliant JavaScript Object Notation (JSON) <xref target="RFC4627"></xref> object 
   that can be used to perform PayID Discovery as defined in section 4.1 of
   this document.</t>

<t>As an alternative, "manual" mode MAY be used to decompose a PayID into a
   URL, without any intermediate server interaction by simply transposing
   portions of a PayID URI into a URL format. This procedure is defined in
   section 4.2 of this document.</t>

<t>It should be noted that "manual" mode does not allow divergence between the
   string characters in a PayID URI and any corresponding PayID URL. 
   Interactive mode, on the other hand, does allow such divergence, and is 
   thus more powerful. For example, in manual mode, the PayID
   'alice$example.com' MUST always map to the URL 
   'https://example.com/alice', whereas in interactive mode that same
   PayID URI can map to any arbitrary URL structure determined by the
   service provider, such as 'https://example.com/users/alice'.</t>

<t>Information returned via PayID Discovery might be used for direct human
   consumption (e.g., looking up someone's Bitcoin address), or it might be
   used by systems to help carry out some operation (e.g., facilitating,
   with additional security mechanisms, protocols to support compliance or 
   other legal requirements necessary to facilitate a payment).</t>

<t>The information returned via this protocol is intended to be static
   in nature. As such, PayID Discovery is not intended to be used to return
   dynamic information like a payment account balance or the current
   status of a payment account.</t>

<t>PayID Discovery is designed to be used across many applications. Use of 
   PayID Discovery is illustrated in the examples in Section 3 and
   described more formally in Section 4.</t>

</section>
<section anchor="terminology" title="Terminology">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   <xref target="RFC2119"></xref>.</t>

</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows sample uses of PayID Discovery in several
   hypothetical scenarios.</t>

<section anchor="payid-discovery-by-a-wallet" title="PayID Discovery by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet
   provider that Alice has an account on. Alice would log-in to the wallet
   provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the
   wallet UI to start the payment.</t>

<t>The Wallet application would first perform a WebFinger query looking for 
   the PayID Discovery service provider, like this:</t>

<figure><artwork><![CDATA[
 GET /.well-known/webfinger?
       resource=payid%3Abob%24receiver.example.com
       HTTP/1.1
 Host: receiver.example.com
]]></artwork></figure>

<t>The server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json
 
 {
   "subject" : "payid:bob$receiver.example.com",
   "links" :
   [
     {  
       "rel": "http://payid.org/rel/payid-uri-template/1.0",
       "template": "https://receiver.example.com/users/{acctpart}"
     }
   ]
 }
]]></artwork></figure>

<t>Alice's wallet then uses the URL template found in the <spanx style="verb">template</spanx> property
   to assemble the specified PayId URL, 
   <spanx style="verb">https://receiver.example.com/users/bob</spanx>.</t>

<t>Per <xref target="RFC7033"></xref>, Webfinger requests can be filtered by using a "rel" 
   parameter in the Webfinger request. Because support for the "rel" parameter
   is not required nor guaranteed, the client must not assume the "links" 
   array will contain only the link relations related to PayID Discovery.</t>

</section>
<section anchor="payid-discovery-with-default-template" title="PayID Discovery with Default Template">
<t>Suppose Alice, as in the example above, wishes to send a friend some XRP
  from a web-based wallet provider that Alice has an account on. However, in 
  this example, let's assume that the PayID Alice is wanting to pay doesn't 
  support "interactive" PayID discovery (i.e., the receiver's server doesn't 
  support Webfinger).</t>

<t>Alice would log-in to her wallet provider and enter Bob's PayID (say
  <spanx style="verb">bob$receiver.example.com</spanx>) to make a payment.</t>

<t>The Wallet application would first attempt a WebFinger query as in the 
  example above, like this:</t>

<figure><artwork><![CDATA[
  GET /.well-known/webfinger?
        resource=payid%3Abob%24receiver.example.com&
        HTTP/1.1
  Host: receiver.example.com
]]></artwork></figure>

<t>However, in this case the <spanx style="verb">receiver.example.com</spanx> server doesn't support 
  "interactive" PayID Discovery, so the server responds like this:</t>

<figure><artwork><![CDATA[
  HTTP/1.1 404 NOT FOUND
]]></artwork></figure>

<t>Because Alice's Wallet can utilize "manual" PayID Discovery, the wallet
  software merely transforms <spanx style="verb">bob$receiever.example.com</spanx> into the URL 
  <spanx style="verb">https://receiver.example.com/bob</spanx>. Alice's wallet then uses that URL to 
  continue making a PayID payment.</t>

<t>It should be noted that "manual" mode does not allow the PayID URI to
  diverge from the underlying URL returned via PayID Discovery. Because of
  this, "interactive" PayID Discovery is generally preferred.</t>

</section>
</section>
<section anchor="payid-discovery-protocol" title="PayID Discovery Protocol">
<t>The PayID Discovery protocol is used to request information about an entity
  identified by a PayID URI.</t>

<t>When successful, PayID Discovery always yields a PayID URL, which is a
  URI as defined by <xref target="RFC3986"></xref> using the 'https' scheme defined in section
  2.7.2 <xref target="RFC7230"></xref>. A PayID URL can be used for any purposes outside the
  scope of this document.</t>

<t>PayID Discovery is performed using one of two modes: "interactive" or
  "manual." Clients MUST attempt "interactive" mode first. If that
  mode fails to yield a PayID URL, then "manual" mode MAY be used as an
  alternative discovery mechanism.</t>

<section anchor="interactive-mode" title="Interactive Mode">
<t>Interactive PayID Discovery is broken up into a series of steps, each of
  which is defined in more detail below. The following is a visual
  representation of the protocol flow:</t>

<figure><artwork><![CDATA[
                    +--------------------------+                    
                    |        PayID URI         |                    
                    |    alice$example.com     |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |         Assemble         |                    
                    |   PayID Discovery URL    |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |          Query           |                    
              +-----|   PayID Discovery URL    |-----+              
              |     +--------------------------+     |              
              |                                  Success            
              |                                      |              
              |                                      v              
              |                        +---------------------------+
          Failure                      |   Parse PayID Metadata    |
              |                        +---------------------------+
              |                                      |              
              |                                      v              
              |                        +---------------------------+
              |                        | Select PayID URI Template |
              |                        +---------------------------+
              |                                      |              
              v                                      v              
+--------------------------+           +---------------------------+
|  Manual PayID Discovery  |           |    Assemble PayID URL     |
+--------------------------+           +---------------------------+
              |                                      |              
              +---------------------+----------------+              
                                    |                               
                                    v                               
                      +---------------------------+                 
                      |         PayID URL         |                 
                      | https://example.com/alice |                 
                      +---------------------------+                 
]]></artwork></figure>

<section anchor="step-1-assemble-payid-discovery-url" title="Step 1: Assemble PayID Discovery URL">
<t>PayID Discovery utilizes the Webfinger <xref target="RFC7033"></xref> specification in a 
  narrowly defined profile.</t>

<t>This document defines a PayID Discovery URL as being a Webfinger 
  resource URI where the specified resource value is a valid PayID 
  URI <xref target="PAYID-URI"></xref>.</t>

<t>For example, the PayID Discovery URI for alice$example.com is</t>

<figure><artwork><![CDATA[
 https://example.com/.well-known/webfinger?resource=payid%3Abob%24example.com
]]></artwork></figure>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Disovery URL,
  as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
  as the resource representation to convey information about the requested 
  PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, then
  interactive PayID Discovery is considered to have failed. Clients MAY 
  attempt to assemble a PayID URL using "manual" mode as defined in section
  4.2.1 of this document.</t>

</section>
<section anchor="step-3-parse-payid-metadata" title="Step 3: Parse PayID Metadata">
<t>If the PayID Discovery server returns a valid response, the response will
  contain one or more of the JRDs defined in section 5 of this document.</t>

<t>If any of the JRDs contain a 'rel' value that represents a PayID URL
  Template, then that template value MUST be used in the next protocol step.</t>

<t>Failing the above, if the 'rel' value of any JRDs represents a PayID
  Discovery URL, then that URL MUST be used in step 2 above, repeated
  recursively if needed, until a valid PayID URI Template is obtained. 
  That URI Template value MUST be used in the next protocol step.</t>

</section>
<section anchor="step-4-assemble-payid-url" title="Step 4: Assemble PayID URL">
<t>A PayID URL is constructed by applying the PayID URI to the PayID URI
   Template string obtained in the step above. The PayID URI template MAY
   contain a URI string without any variables to represent a host-level
   PayID URL that is identical for every PayID URI on a particular host.</t>

<t>For example, a PayID Discovery endpoint that only supports a single account
   might use a URI template string with no variables, like this:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-uri-template/1.0",
  "template": "https://example.com/alice"
}
]]></artwork></figure>

<t>The result of this step is the PayID URL. Once obtained, PayID Discovery
   is considered to have completed successfully.</t>

<section anchor="template-syntax" title="Template Syntax">
<t>This specification defines a simple template syntax for PayID URI
   transformation.  A template is a string containing brace-enclosed
   ("{}") variable names marking the parts of the string that are to be
   substituted by the corresponding variable values.</t>

<t>This specification defines a one variable – "acctpart" – which 
   corresponds to the 'acctpart' of a PayID URI as defined in <xref target="PAYID-URI"></xref>.</t>

<t>When substituting the 'acctpart' value into a URI 'path' as defined by
   <xref target="RFC3986"></xref>, values MUST NOT be percent or otherwise encoded because the
   'acctpart' value of a PayID URI always conforms to the character set
   allowed by paths in <xref target="RFC3986"></xref>.</t>

<t>However, before substituting template variables into a URI 'query' part,
   values MUST be encoded using UTF-8, and any character other than
   unreserved (as defined by <xref target="RFC3986"></xref>) MUST be percent-encoded per <xref target="RFC3986"></xref>.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT 
   change the meaning of the 'acctpart' variable. If a client is unable to
   successfully process a template (e.g., unknown variable names, unknown or 
   incompatible syntax), the JRD SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char ) ; "acctpart" or
                                                              other names
variable     =  "{" var-name "}"
PAYID-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    alice$example.org
 Template: https://example.org/{acctpart}
 Output:   https://example.org/alice
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="fallback-mode" title="Fallback Mode">
<t>If "Interactive" mode is not supported or otherwise fails to yield a PayID
  URL, then a PayID URL MAY be assembled manually using the following
  predefined ruleset:</t>

<t><list style="numbers">
  <t>Decompose the PayID URI into its component parts, per <xref target="PAYID-URI"></xref>, 
capturing the 'acctpart' and 'host' values.</t>
  <t>Using the 'acctpart' and 'host', assemble a URL by substituting each
   value into the following string using no special encoding or other
   character adjustments: <spanx style="verb">https://{host}/{acctpart}</spanx>.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    bob.primary$example.org
 Output:   https://example.org/bob.primary
]]></artwork></figure>

<t>The resulting URL is a PayID URL.</t>

<section anchor="fallback-assembly-flow" title="Fallback Assembly Flow">
<t>The following is a visual representation of the Fallback Assembly protocol
  flow:</t>

<figure><artwork><![CDATA[
+--------------------------+ 
|        PayID URI         | 
|    alice$example.com     | 
+--------------------------+ 
              |              
              v              
+--------------------------+ 
|Manual PayID URL Assembly | 
+--------------------------+ 
              |              
              v              
+---------------------------+
|         PayID URL         |
| https://example.com/alice |
+---------------------------+
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="payid-discovery-jrds" title="PayID Discovery JRDs">
<t>This document defines two JRDs that conform to section 4.4 of the
  Webfinger RFC.</t>

<section anchor="jrd-for-payid-discovery-url" title="JRD for PayID Discovery URL">
<t>This type of JRD can be used to represent a URL that is a PayID Discovery
  URL. This is useful for delegating PayID Discovery to another service
  endpoint:</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">http://payid.org/rel/payid-discovery-url/1.0</spanx></t>
  <t>'href': A PayID Discovery URL that clients can dereference to perform
        interactive PayID Discovery.</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID Discovery URL:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-discovery-url/1.0",
  "href": "https://delegate.example.com/.well-known/webfinger?resource=
           payid%3Aalice%24example.com"
}
]]></artwork></figure>

</section>
<section anchor="jrd-for-payid-uri-template" title="JRD for PayID URI Template">
<t>This type of JRD can be used to represent a URL that is a PayID URL
  Template.</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">http://payid.org/rel/payid-uri-template/1.0</spanx></t>
  <t>'template': A PayID URI Template</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID URI Template:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-uri-template/1.0",
  "template": "https://example.com/{acctpart}"
}                
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Discovery.</t>

<t>Among other resource, consult section 9 of <xref target="RFC7033"></xref> and section 7 of
<xref target="RFC3986"></xref> for important security considerations involved in PayID
Discovery.</t>

<section anchor="hosted-payid-discovery-services" title="Hosted PayID Discovery Services">
<t>As with most services provided on the Internet, it is possible for a domain
owner to utilize "hosted" WebFinger services. Consult section 7 of 
<xref target="RFC7033"></xref> for considerations that could apply to both "manual" and
"interactive" PayID Discovery when hosted by a third-party.</t>

</section>
<section anchor="cross-origin-resource-sharing-cors" title="Cross-Origin Resource Sharing (CORS)">
<t>PayID Discovery resources might not be accessible from a web browser due to
"Same-Origin" policies. See section 5 of <xref target="RFC7033"></xref> for CORS considerations
that apply to both "manual" and "interactive" PayID Discovery modes.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of <xref target="RFC7033"></xref> for Access Control
considerations that could apply to both "manual" and "interactive" PayID
Discovery modes.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="new-link-relation-types" title="New Link Relation Types">
<t>This document defines the following Link relation type per <xref target="RFC7033"></xref>:</t>

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">http://payid.org/rel/discovery/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/payid-uri-template</spanx></t>
  <t>Description: PayID Discovery URI Template, version 1.0</t>
</list></t>

<t>See section 3 for examples of this type of Link.</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>This document was heavily influenced by, and builds upon, Webfinger
<xref target="RFC7033"></xref> (adapted for a payments use-case) as well as the supporting
RFCs that it relies upon and that influenced it, especially <xref target="RFC5988"></xref> and
<xref target="RFC6415"></xref>. The author would like to acknowledge the contributions of 
everyone who worked on those and any related specifications.</t>

<t>In addition, the author would like to acknowledge everyone who provided
feedback and use-cases for this derivative specification.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC3986;
&RFC4627;
&RFC6570;
&RFC7033;
&RFC7230;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;
&RFC6415;


    </references>



  </back>

<!-- ##markdown-source:
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
uKWjpbFXy2isutS3POLdQiKO/ges2dwtcEsAAA==

-->

</rfc>

