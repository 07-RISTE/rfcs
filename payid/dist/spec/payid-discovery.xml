<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4627 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4627.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC7033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7033.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-fuelling-payid-discovery-01" category="std">

  <front>
    <title>PayID Discovery</title>

    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>fuelling@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="April" day="16"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID Discovery protocol, which can be used
to discover information about a 'payid' URI using standard HTTP methods.</t>

<t>The primary use-case of this protocol is to define how to transform a 
PayID URI into a URL that can be used with other protocols.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a part of the <eref target="https://payid.org/">PayID Protocol</eref> work.
 Feedback related to this specification should be sent to <eref target="mailto:payid@ripple.com">payid@ripple.com</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">
<t>PayID Discovery is used to transform a PayID URI <xref target="PAYID-URI"></xref> into a URL 
   that can be used by higher-order protocols using HTTP.</t>

<t>This document specifies two modes of PayID discovery: one using
   Webfinger <xref target="RFC7033"></xref> to resolve a corresponding URL from a PayID URI
   in an automated fashion; and one using a manual, fallback mechanism
   to assemble a URL from a PayID URI by-hand.</t>

<t>In 'automated' mode, a PayID can be presented to a service endpoint that
   supports PayID Discovery. The resource returns a Webfinger-compliant 
   JavaScript Object Notation (JSON) <xref target="RFC4627"></xref> object that can be used
   to assemble PayID URL as defined by the procedure in section 4.1 of
   this document.</t>

<t>Conversely, in "manual" mode, a PayID can be decomposed into a URL, without
   any intermediate server interaction, simply by transposing portions of the
   PayID into a URL format defined in section 4.2 of this document.</t>

<t>It should be noted that "manual" mode does not allow divergence between the
   string characters in a PayID URI and any corresponding URL. Conversely, 
   "automatic" mode does allow such divergence. For example, in "manual" mode,
   the PayID 'alice$example.com' MUST always map to the URL 
   'https://example.com/alice', whereas in "automatic" mode that same PayID
   URI can map to any arbitrary URL structure determined buy the service
   provider, such as 'https://example.com/users/alice'.</t>

<t>Information returned via PayID Discovery might be for direct human
   consumption (e.g., looking up someone's Bitcoin address), or it might be
   used by systems to help carry out some operation (e.g., facilitating,
   with additional security mechanisms, protocols to support compliance or 
   other legal requirements necessary to facilitate a payment).</t>

<t>The information returned via this protocol is intended to be static
   in nature, and, as such, PayID Discovery is not intended to be
   used to return dynamic information like a payment account balance or 
   the current status of an account.</t>

<t>PayID Discovery is designed to be used across many applications. Use of 
   PayID Discovery is illustrated in the examples in Section 3 and
   described more formally in Section 4.</t>

</section>
<section anchor="terminology" title="Terminology">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   <xref target="RFC2119"></xref>.</t>

</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows sample uses of PayID Discovery in several
    hypothetical scenarios.</t>

<section anchor="automated-payid-discovery-by-a-wallet" title="Automated PayID Discovery by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet
   provider that Alice has an account on. Alice would log-in to the wallet
   provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the
   wallet UI to start the payment.</t>

<t>The Wallet application would first perform a WebFinger query looking for 
   the PayID Discovery service provider, like this:</t>

<figure><artwork><![CDATA[
 GET /.well-known/webfinger?
       resource=payid%3Abob%24receiver.example.com
       HTTP/1.1
 Host: receiver.example.com
]]></artwork></figure>

<t>The server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:bob$receiver.exmaple.com",
   "links" :
   [
     {  
       "rel": "http://payid.org/rel/discovery/1.0 ",
       "type": "application/payid-uri-template",
       "href": "https://receiver.exmaple.com/users/{acctpart}"
     }
   ]
 }
]]></artwork></figure>

<t>Alice's wallet then uses URL template found in the <spanx style="verb">href</spanx> property to 
   assemble a PayId-specific URL, <spanx style="verb">https://receiver.exmaple.com/users/bob</spanx>.</t>

<t>Per RFC-7033, Webfinger requests can be filtered by using a "rel" 
   parameter in the Webfinger request. Because support for the "rel" parameter
   is not required nor guaranteed, the client must not assume the "links" 
   array will contain only the link relations related to PayID Discovery.</t>

</section>
<section anchor="manual-payid-discovery-by-a-wallet" title="Manual PayID Discovery by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet
  provider that Alice has an account on. However, in this example, let's
   assume that the PayID Alice is wanting to pay doesn't support "automated"
   PayID discovery (i.e., the receiver's server doesn't support Webfinger).</t>

<t>Alice would log-in to her wallet provider and enter Bob's PayID (say
   <spanx style="verb">bob$receiver.example.com</spanx>) to make a payment.</t>

<t>The Wallet application would first attempt a WebFinger query as in the 
   example above, like this:</t>

<figure><artwork><![CDATA[
   GET /.well-known/webfinger?
         resource=payid%3Abob%24receiver.example.com&
         HTTP/1.1
   Host: receiver.example.com
]]></artwork></figure>

<t>However, in this case the <spanx style="verb">receiver.exapmle.com</spanx> server doesn't support 
   "automated" PayID Discovery, so the server responds like this:</t>

<figure><artwork><![CDATA[
   HTTP/1.1 404 NOT FOUND
]]></artwork></figure>

<t>Because Alice's Wallet can utilize "manual" PayID Discovery, the wallet
   software merely transforms <spanx style="verb">bob$receiever.example.com</spanx> into the URL 
   <spanx style="verb">https://receiver.example.com/bob</spanx>. Alice's wallet then uses that URL to 
   continue making a PayID payment.</t>

<t>It should be noted that "manual" mode does not allow the PayID URI to
   diverge from the underlying URL returned via PayID Discovery. Because of
   this, "automated" PayID Discovery is generally preferred.</t>

</section>
</section>
<section anchor="payid-discovery-protocol" title="PayID Discovery Protocol">
<t>The PayID Discovery protocol is used to request information about an entity
  identified by a query target that is a PayID URI.</t>

<t>The result of PayID Discovery is a URL that can be used for any other
  protocol purposes that are outside the scope of this document.</t>

<t>To this end, PayID Discovery defines two modes of operation, "manual" and
  "automated" (defined below). Clients SHOULD attempt "automated mode" first.
  Failing that, "manual mode" SHOULD be used.</t>

<section anchor="automated-mode" title="Automated Mode">
<t>This mode utilizes the Webfinger specification in a narrowly defined
  profile.</t>

<t>A WebFinger resource is always given a query target, which is another
  URI that identifies the entity whose information is sought. For PayID
  Discovery, this supplied URI MUST always be a valid PayID URI, and must be
  supplied to the WebFinger service according to the rules defined in
  section 4.1 of Webfinger <xref target="RFC7033"></xref>.</t>

<t>In this profile, the WebFinger resource returns a JSON Resource Descriptor
  (JRD) as the resource representation to convey information about the
  requested PayID. The returned JRD MUST have a URI template that can be used
  to map the source PayID to a de-referencable URL.</t>

<section anchor="automated-mode-url-assembly" title="Automated Mode URL Assembly">
<t>If a PayID Discovery server returns a JRD that conforms to section 4.1.2
below, then the following ruleset SHOULD be used to transform the
corresponding PayID URI into a URL:</t>

<t><list style="numbers">
  <t>Decompose the PayID URI into its component parts, per <xref target="PAYID-URI"></xref>, 
capturing the <spanx style="verb">acctpart</spanx> and <spanx style="verb">host</spanx> values.</t>
  <t>Repalce the <spanx style="verb">acctpart</spanx> template variable in the URI template returned from 
#1 above and with the <spanx style="verb">acctpart</spanx> portion of the PayID URI.</t>
</list></t>

<t>The resulting URL can be used according to the rules defined in any other
protocol.</t>

</section>
<section anchor="payid-disovery-jrds" title="PayID Disovery JRDs">
<t>Any JRD returned via Webfinger MUST be compatible with section 4.4 of
  RFC-7033. As such, this protocol defines a single compatible 'link' as 
  follows:</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">http://payid.org/rel/discovery/1.0</spanx></t>
  <t>'type': <spanx style="verb">application/payid-uri-template</spanx></t>
  <t>'href': A URI template as defined by <xref target="RFC6570"></xref> that specifies an
        <spanx style="verb">{acctpart}</spanx> template value specifying where in the service
        provider's URL-space the account identifier should be located.</t>
</list></t>

</section>
</section>
<section anchor="manual-mode" title="Manual Mode">
<t>If "Automated" mode is not supported or otherwise fails to yield a PayID
  URL, then a URL can be assembled manually.</t>

<section anchor="manual-mode-url-assembly" title="Manual Mode URL Assembly">
<t>If "Automated" mode is not supported or otherwise fails to yield a PayID
  URL, then the following predefined ruleset SHOULD instead be used to
  transform a PayID URI into a URL.</t>

<t><list style="numbers">
  <t>Decompose the PayID URI into its component parts, per <xref target="PAYID-URI"></xref>, 
capturing the <spanx style="verb">acctpart</spanx> and <spanx style="verb">host</spanx> values.</t>
  <t>Using the <spanx style="verb">acctpart</spanx> and the <spanx style="verb">host</spanx>, assemble a URL according to the
following URL template:<spanx style="verb">https://{host}/{acctpart}</spanx></t>
</list></t>

<t>The resulting URL can be used according to the rules defined in any other
protocol.</t>

</section>
</section>
</section>
<section anchor="cross-origin-resource-sharing-cors" title="Cross-Origin Resource Sharing (CORS)">
<t>PayID Discovery resources might not be accessible from a web browser due to
"Same-Origin" policies. See section 5 of RFC-7033 for CORS considerations
that apply to both "manual" and "automated" PayID Discovery modes.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of RFC-7033 for Access Control
considerations that could apply to both "manual" and "automated" PayID
Discovery modes.</t>

</section>
<section anchor="hosted-payid-discovery-services" title="Hosted PayID Discovery Services">
<t>As with most services provided on the Internet, it is possible for a domain
owner to utilize "hosted" WebFinger services. Consult section 7 of 
RFC-7033 for considerations that could apply to both "manual" and
"automated" PayID Discovery when hosted by a third-party.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Discovery.</t>

<t>Among other resource, consult section 9 of RFC-7033 and section 7 of
<xref target="RFC3986"></xref> for important security considerations involved in PayID
Discovery.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="new-link-relation-types" title="New Link Relation Types">
<t>This document defines the following Link relation type per RFC-7033:</t>

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">http://payid.org/rel/discovery/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/payid-uri-template</spanx></t>
  <t>Description: PayID Discovery URI Template, version 1.0</t>
</list></t>

<t>See section 3 for examples of this type of Link.</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>This document was heavily influenced by, and builds upon, the Webfinger
protocol as defined in RFC-7033 (adapted for a payments use-case). The
author would like to acknowledge the contributions of everyone who worked
on that and related specifications.</t>

<t>In addition, the author would like to acknowledge everyone who provided
feedback and use-cases for this derivative specification.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC3986;
&RFC4627;
&RFC6570;
&RFC7033;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>




  </back>

<!-- ##markdown-source:
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
8yYtAAA=

-->

</rfc>

