<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4627 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4627.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC7033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7033.xml">
<!ENTITY RFC7230 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7230.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
<!ENTITY RFC6415 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6415.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-fuelling-payid-discovery-01" category="std">

  <front>
    <title>PayID Discovery</title>

    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>fuelling@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="April" day="21"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID Discovery protocol, which can be used
to discover information about a 'payid' URI using standard HTTP methods.</t>

<t>The primary use-case of this protocol is to define how to transform a 
PayID URI into a URL that can be used with other protocols.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a part of the <eref target="https://payid.org/">PayID Protocol</eref> work.
 Feedback related to this specification should be sent to <eref target="mailto:payid@ripple.com">payid@ripple.com</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">
<t>PayID Discovery is used to transform a PayID URI <xref target="PAYID-URI"></xref> into a
   URL (defined below as a PayID Discovery URL) that can then be used by 
   higher-order protocols to discover metadata about a service provider.</t>

<t>This document specifies two modes of PayID discovery: one using
   Webfinger <xref target="RFC7033"></xref> to resolve a corresponding PayID Discovery URL
   from a PayID using an interactive fashion. The second modes uses a manual, 
   fallback mechanism to assemble a PayID Discovery URL from a PayID by-hand.</t>

<t>In 'interactive' mode, a PayID can be presented to a service endpoint that
   supports PayID Discovery. The resource returns a Webfinger-compliant 
   JavaScript Object Notation (JSON) <xref target="RFC4627"></xref> object that can be used
   to perform PayID Discovery as defined in section 4.1 of this document.</t>

<t>Conversely, in "fallback" mode, a PayID can be decomposed into a URL, without
   any intermediate server interaction, by simply transposing portions of a
   PayID URI into a URL format. This procedure is defined in section 4.2 of
   this document.</t>

<t>It should be noted that "fallback" mode does not allow divergence between the
   string characters in a PayID URI and any corresponding URL. Conversely, 
   "interactive" mode does allow such divergence, and is thus more powerful. For
   example, in "fallback" mode, the PayID 'alice$example.com' MUST always map
   to the URL 'https://example.com/alice', whereas in "interactive" mode
   that same PayID URI can map to any arbitrary URL structure determined
   buy the service provider, such as 'https://example.com/users/alice'.</t>

<t>Information returned via PayID Discovery might be used for direct human
   consumption (e.g., looking up someone's Bitcoin address), or it might be
   used by systems to help carry out some operation (e.g., facilitating,
   with additional security mechanisms, protocols to support compliance or 
   other legal requirements necessary to facilitate a payment).</t>

<t>The information returned via this protocol is intended to be static
   in nature. As such, PayID Discovery is not intended to be used to return
   dynamic information like a payment account balance or the current
   status of an account.</t>

<t>PayID Discovery is designed to be used across many applications. Use of 
   PayID Discovery is illustrated in the examples in Section 3 and
   described more formally in Section 4.</t>

</section>
<section anchor="terminology" title="Terminology">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   <xref target="RFC2119"></xref>.</t>

</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows sample uses of PayID Discovery in several
   hypothetical scenarios.</t>

<section anchor="payid-discovery-by-a-wallet" title="PayID Discovery by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet
   provider that Alice has an account on. Alice would log-in to the wallet
   provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the
   wallet UI to start the payment.</t>

<t>The Wallet application would first perform a WebFinger query looking for 
   the PayID Discovery service provider, like this:</t>

<figure><artwork><![CDATA[
 GET /.well-known/webfinger?
       resource=payid%3Abob%24receiver.example.com
       HTTP/1.1
 Host: receiver.example.com
]]></artwork></figure>

<t>The server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:bob$receiver.exmaple.com",
   "links" :
   [
     {  
       "rel": "http://payid.org/rel/discovery/1.0",
       "template": "https://receiver.exmaple.com/users/{acctpart}"
     }
   ]
 }
]]></artwork></figure>

<t>Alice's wallet then uses URL template found in the <spanx style="verb">template</spanx> property to 
   assemble a PayId-specific URL, <spanx style="verb">https://receiver.exmaple.com/users/bob</spanx>.</t>

<t>Per <xref target="RFC7033"></xref>, Webfinger requests can be filtered by using a "rel" 
   parameter in the Webfinger request. Because support for the "rel" parameter
   is not required nor guaranteed, the client must not assume the "links" 
   array will contain only the link relations related to PayID Discovery.</t>

</section>
<section anchor="payid-discovery-with-default-template" title="PayID Discovery with Default Template">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet
  provider that Alice has an account on. However, in this example, let's
   assume that the PayID Alice is wanting to pay doesn't support "interactive"
   PayID discovery (i.e., the receiver's server doesn't support Webfinger).</t>

<t>Alice would log-in to her wallet provider and enter Bob's PayID (say
   <spanx style="verb">bob$receiver.example.com</spanx>) to make a payment.</t>

<t>The Wallet application would first attempt a WebFinger query as in the 
   example above, like this:</t>

<figure><artwork><![CDATA[
   GET /.well-known/webfinger?
         resource=payid%3Abob%24receiver.example.com&
         HTTP/1.1
   Host: receiver.example.com
]]></artwork></figure>

<t>However, in this case the <spanx style="verb">receiver.example.com</spanx> server doesn't support 
   "interactive" PayID Discovery, so the server responds like this:</t>

<figure><artwork><![CDATA[
   HTTP/1.1 404 NOT FOUND
]]></artwork></figure>

<t>Because Alice's Wallet can utilize "fallback" PayID Discovery, the wallet
   software merely transforms <spanx style="verb">bob$receiever.example.com</spanx> into the URL 
   <spanx style="verb">https://receiver.example.com/bob</spanx>. Alice's wallet then uses that URL to 
   continue making a PayID payment.</t>

<t>It should be noted that "fallback" mode does not allow the PayID URI to
   diverge from the underlying URL returned via PayID Discovery. Because of
   this, "interactive" PayID Discovery is generally preferred.</t>

</section>
</section>
<section anchor="payid-discovery-protocol" title="PayID Discovery Protocol">
<t>The PayID Discovery protocol is used to request information about an entity
  identified by a PayID URI.</t>

<t>When successful, PayID Discovery always yields a PayID URL, which is a
  URI as defined by <xref target="RFC3986"></xref> using the 'https' scheme defined in
  <xref target="RFC7230"></xref>. A PayID URL can be used for any purposes outside the scope of
  this document.</t>

<t>PayID Discovery is performed using one of two modes: "interactive" or
  "fallback." Clients MUST attempt "interactive" mode first. If that
  mode fails to yield a PayID URL, then "fallback" mode MAY be used as an
  alternative discovery mechanism.</t>

<section anchor="interactive-mode" title="Interactive Mode">
<t>Interactive PayID Discovery is broken up into a series of steps, each of
  which is defined in more detail below. The following is a visual
  representation of the protocol flow:</t>

<figure><artwork><![CDATA[
                    +--------------------------+                    
                    |        PayID URI         |                    
                    |    alice$example.com     |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |         Assemble         |                    
                    |   PayID Discovery URL    |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |          Query           |                    
              +-----|   PayID Discovery URL    |-----+              
              |     +--------------------------+     |              
              |                                  Success            
              |                                      |              
              |                                      v              
              |                        +---------------------------+
          Failure                      |   Parse PayID Metadata    |
              |                        +---------------------------+
              |                                      |              
              |                                      v              
              |                        +---------------------------+
              |                        | Select PayID URI Template |
              |                        +---------------------------+
              |                                      |              
              v                                      v              
+--------------------------+           +---------------------------+
| Fallback PayID Discovery |           |    Assemble PayID URL     |
+--------------------------+           +---------------------------+
              |                                      |              
              +---------------------+----------------+              
                                    |                               
                                    v                               
                      +---------------------------+                 
                      |         PayID URL         |                 
                      | https://example.com/alice |                 
                      +---------------------------+                 
]]></artwork></figure>

<section anchor="step-1-assemble-payid-discovery-url" title="Step 1: Assemble PayID Discovery URL">
<t>PayID Discovery utilizes the Webfinger <xref target="RFC7033"></xref> specification in a 
  narrowly defined profile.</t>

<t>This document defines a PayID Discovery URL as being a Webfinger 
  resource URI where the specified resource value is a valid PayID 
  URI <xref target="PAYID-URI"></xref>.</t>

<t>For example, the PayID Discovery URI for alice$example.com is</t>

<figure><artwork><![CDATA[
 https://example.com/.well-known/webfinger?resource=payid%3Abob%24.example.com
]]></artwork></figure>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Disovery URL,
  as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
  as the resource representation to convey information about the requested 
  PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, then
  interactive PayID Discovery is considered to have failed. Clients SHOULD 
  attempt to assemble a PayID URL using "fallback" mode as defined in section
  4.2.1 of this document.</t>

</section>
<section anchor="step-3-parse-payid-metadata" title="Step 3: Parse PayID Metadata">
<t>If the PayID Discovery server returns a valid response, the response will
  contain one or more of the JRDs defined in section 5 of this document.</t>

<t>If any of the JRDs contain a 'rel' value that represents a PayID URL
  Template, then that template value MUST be used in the next protocol step.</t>

<t>Failing the above, if the 'rel' value of any JRDs represents a PayID
  Discovery URL, then that URL MUST be used in step 2 above, repeated
  recursively if needed, until a valid PayID URI Template is obtained. 
  That URI Template value MUST be used in the next protocol step.</t>

</section>
<section anchor="step-4-assemble-payid-url" title="Step 4: Assemble PayID URL">
<t>A PayID URL is constructed by applying the PayID URI to the PayID URI
   Template string obtained via the steps above. The PayID URI template MAY
   contain a URI string without any variables to represent a host-level
   PayID URL that is identical for every PayID URI on a particular host.</t>

<t>For example, a PayID Discovery endpoint that only supports a single account
   might use a URI template string with no variables, like this:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-url-template/1.0",
  "template": "https://example.com/alice"
}
]]></artwork></figure>

<t>The result of this step is the PayID URL. Once obtained, PayID Discovery
   is considered to have completed successfully.</t>

<section anchor="template-syntax" title="Template Syntax">
<t>This specification defines a simple template syntax for PayID URI
   transformation.  A template is a string containing brace-enclosed
   ("{}") variable names marking the parts of the string that are to be
   substituted by the corresponding variable values.</t>

<t>This specification defines a one variable – "acctpart" – which 
   corresponds to the 'acctpart' of a PayID URI as defined in <xref target="PAYID-URI"></xref>.</t>

<t>When substituting the 'acctpart' value into a URI 'path' as defined by
   <xref target="RFC3986"></xref>, values MUST NOT be percent or otherwise encoded because the
   'acctpart' value of a PayID URI always conforms to the character set
   allowed by paths in <xref target="RFC3986"></xref>.</t>

<t>However, before substituting template variables into a URI 'query' part,
   values MUST be encoded using UTF-8, and any character other than
   unreserved (as defined by <xref target="RFC3986"></xref>) MUST be percent-encoded per <xref target="RFC3986"></xref>.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT 
   change the meaning of the 'acctpart' variable. If a client is unable to
   successfully process a template (e.g., unknown variable names, unknown or 
   incompatible syntax), the JRD SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char ) ; "acctpart" or
                                                              other names
variable     =  "{" var-name "}"
PAYID-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    alice$example.org
 Template: https://example.org/{acctpart}
 Output:   https://example.org/alice
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="fallback-mode" title="Fallback Mode">
<t>If "Interactive" mode is not supported or otherwise fails to yield a PayID
  URL, then a PayID URL MAY be assembled manually using the following
  predefined ruleset:</t>

<t><list style="numbers">
  <t>Decompose the PayID URI into its component parts, per <xref target="PAYID-URI"></xref>, 
capturing the 'acctpart' and 'host' values.</t>
  <t>Using the 'acctpart' and 'host', assemble a URL by substituting each
   value into the following string using no special encoding or other
   character adjustments: <spanx style="verb">https://{host}/{acctpart}</spanx>.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    bob.primary$example.org
 Output:   https://example.org/bob.primary
]]></artwork></figure>

<t>The resulting URL is a PayID URL.</t>

<section anchor="fallback-assembly-flow" title="Fallback Assembly Flow">
<t>The following is a visual representation of the Fallback Assembly protocol
  flow:</t>

<figure><artwork><![CDATA[
+--------------------------+ 
|        PayID URI         | 
|    alice$example.com     | 
+--------------------------+ 
              |              
              v              
+--------------------------+ 
|Manual PayID URL Assembly | 
+--------------------------+ 
              |              
              v              
+---------------------------+
|         PayID URL         |
| https://example.com/alice |
+---------------------------+
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="payid-discovery-jrds" title="PayID Discovery JRDs">
<t>This document defines two JRDs that conform to section 4.4 of the
  Webfinger RFC.</t>

<section anchor="jrd-for-payid-discovery-url" title="JRD for PayID Discovery URL">
<t>This type of JRD can be used to represent a URL that is a PayID Discovery
  URL. This is useful for delegating PayID Discovery to another service
  endpoint:</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">http://payid.org/rel/payid-discovery-url/1.0</spanx></t>
  <t>'href': A PayID Discovery URL that clients can dereference to perform
        interactive PayID Discovery.</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID Discovery URL:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-discovery-url/1.0",
  "href": "https://delegate.example.com/.well-known/webfinger?resource=
           payid%3Aalice%24example.com"
}
]]></artwork></figure>

</section>
<section anchor="jrd-for-payid-uri-template" title="JRD for PayID URI Template">
<t>This type of JRD can be used to represent a URL that is a PayID URL
  Template.</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">http://payid.org/rel/payid-url-template/1.0</spanx></t>
  <t>'template': A PayID URI Template</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID URI Template:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-url-template/1.0",
  "template": "https://example.com/{acctpart}"
}                
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Discovery.</t>

<t>Among other resource, consult section 9 of <xref target="RFC7033"></xref> and section 7 of
<xref target="RFC3986"></xref> for important security considerations involved in PayID
Discovery.</t>

<section anchor="hosted-payid-discovery-services" title="Hosted PayID Discovery Services">
<t>As with most services provided on the Internet, it is possible for a domain
owner to utilize "hosted" WebFinger services. Consult section 7 of 
<xref target="RFC7033"></xref> for considerations that could apply to both "fallback" and
"interactive" PayID Discovery when hosted by a third-party.</t>

</section>
<section anchor="cross-origin-resource-sharing-cors" title="Cross-Origin Resource Sharing (CORS)">
<t>PayID Discovery resources might not be accessible from a web browser due to
"Same-Origin" policies. See section 5 of <xref target="RFC7033"></xref> for CORS considerations
that apply to both "fallback" and "interactive" PayID Discovery modes.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of <xref target="RFC7033"></xref> for Access Control
considerations that could apply to both "fallback" and "interactive" PayID
Discovery modes.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="new-link-relation-types" title="New Link Relation Types">
<t>This document defines the following Link relation type per <xref target="RFC7033"></xref>:</t>

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">http://payid.org/rel/discovery/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/payid-uri-template</spanx></t>
  <t>Description: PayID Discovery URI Template, version 1.0</t>
</list></t>

<t>See section 3 for examples of this type of Link.</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>This document was heavily influenced by, and builds upon, Webfinger
<xref target="RFC7033"></xref> (adapted for a payments use-case) as well as the supporting
RFCs that it relies upon and that influenced it, especially <xref target="RFC5988"></xref> and
<xref target="RFC6415"></xref>. The author would like to acknowledge the contributions of 
everyone who worked on those and any related specifications.</t>

<t>In addition, the author would like to acknowledge everyone who provided
feedback and use-cases for this derivative specification.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC3986;
&RFC4627;
&RFC6570;
&RFC7033;
&RFC7230;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;
&RFC6415;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAC02n14AA+08a3PbOJLf+StQys7Jzkh0nDgv3e3daeJ449kkzsbO7U2l
piYQCVmYUKSGIK3RZvLfrx8ACFK04jyuaq/qVJMxRYKNRqPf3dB4PI6SItX5
5UTU1Xz8KIoqXWVqIl7JzemxONYmKa5UuYnSIsnlEh6kpZxX43mtsgxeG6/k
Rqfj1I0b3zmMElmpy6LcTISp0iha6Yl4WxXJSJiirEo1N3C1WfJFUiyXKq/M
z5FZyrL65be6qJSZiGI+j0QkSyUBikrqUlebSNbVoignkeAP/B3Ttc7hjeNY
nFik6CZjeyyvdNp+UJSw2Nd6tcoUfTeAk6om4t7hffGiyKvLYgkLEed0m0Yk
MPlEnMtcnJQyT3CtdL9Ul7rIJ+LJlIcVKcz4+OjwzpH9XucVkuHNOX1fLYoc
Boy7H3qollJnE+Ho+p8lIRgDfegxEGAiFlW1MpODg/V6HXeeAzXyolzKSl8p
JtDrkyd3Dw8f+y/3Hj964L8cPbj70H95cP/hHf/l4Z1795ovd+/ZJ6+mP50e
j9+8PnXUt2wyuFgoMSQmGAp4LM6ThVqqgRsly0ukrcO8mqWx+l0uLeoHdlhn
Y/s3FD/zOst6NzbS+Xxr/fcfP3rUrPLo8D5/iYDmIgc+++VEqXQmk/dRdLHQ
RpiVSvRcA//Ctgq4IcUKmBKYUVSwzLcsE6/KAri5yH7ec6ui5cfAVwf7Yl2U
7+NIOMjAIxmIQyqqAmBszWEWRZ2lYqaAyfMKB/0bAQu2/9/jiBCWM2BUmVR9
qKZqrnNlCMuO4IqVRXck1gudLEQCbAzz1UalEcznJFd4AgI8OSvqClYfbmxt
gM4gLDJPZZmKZxcXr8RSwb6lJkb6KZhJgwxvEPQ4kUYx3QBZhwKSFKckbMWi
WBNVQKQMTg3zRYw8TqdzeCbh8jnAkFWItljraiEKWGzpQZuYFYLwG7zUaQoS
Ht0SpyCFRVonuDQc0qUQYEVgO8g0uLz13P/z258tZggIkdvj1eAeZrAgafyb
zQQwbr9ZBeDdLGW2IawX+hJWMy7KNFyTCPcHaC1TWUm/OUaVVzpBshcgCqqM
nSKAf8QjoLJrVK6OWZBB1oVYgpoyuDeMplfdoHRzxduMIP6uZrCwS5j5rVUL
uHjAqFSmyK4UYJAUJXxZFTkakL5VI5x5WTTUZCYCIgARFXIziKuYS7OArYkF
MhEoe4BnkQQSIT2XMq8lMDCBk1lGgrVUyULm2iwRJ2mMWs4y1U/8Ng6zzRhe
TIlc+O80F8MAnSHNPfLDLeOtYKVAS2aThvgqT1eFRtGF7UVopl6twMyZLh68
OqRdXSZ4UdVljovzdB6DsK8yLQEYAvpRXsnzBPRAJc5mv6qkEi+LisVz78fz
s5f7tC+oyHFfCh7SFRUEBPiuVElM3aUNcKtjX50j6Qn8UXzoRdfxkKfWkyKH
V43KNiN8Z+D2Y9BPtlThqgpDMziJHpEEAxcjQJlvmBuWKtWgKom0pI/slhT5
CMXEaKDOhiUUACIfIaHhMTGzbCS7oz5YrcUsEyAsiUrrUqHU9679LkAjsvUu
/7QKdDbakJRp3qEDvAicC88F3Aa1kAJjgSXMYednqlorRWogYu8DlwK8jIsF
yiI2ofIBViUatYUNFha39gJhDQI2DvFgHEwN2r9BZESQUSMvagODgSSrYg2M
UmdgeIsSAVpT3b/TjbEZygxk4U+BYR+KF2/OL2DitdwAcLmyjIjv4J4MnekM
nQGCMkQ7pcDvI0Jsr4i3BihuwA0IyIT8BvOQdAK1ZDnTwCpW/oHIoP5x11OF
nIa7joBm9YZQ6qrSERMLcOhFFCSrNBbdUOueBiaUBRzY40pv66QlqPvK2wB4
CfalRPld1KDrIvIdc1MvVyzuKr6MRyIrive49fUKHOmlAmU9NOIHXSUFckya
AneY/RG4t0JXfgaE5QyN2ZhKLcmqLFS2ApKVgAsaE4QnCtASMpxwLhOdadQ5
+eUIAZHdhZk0jpKZd8wbXQwefct6WW0onGoDGgN+CIvNd6YuAU6pfqth/RQI
iFwlsBDcOXjfo6DIF9vgkP22oVMtz6VF9i3nA7kpT1mHo8+Fa0sicjghXkAG
icXU0OaP+twEFOgODOc58MQIK92Ah6qTFlqZfh+sQMiEYgMxk5mjCbIhULOE
x6wWAB1WbLkb7pVQD2ZgLfVl3sZKJmVhUPpQHsCdtN4iuEpv2Dm7BpbOshp9
zYpVI2JmuZ9k8tyqynuoQGjByoCdmqmUtQitOss24dgjxv2WuCDpK7LicuO2
773aoNecGjFApTEY8V/x8oyuXz/925vT10+P8fr82fT5c3/BI0jxnT87e/Pc
DsGr5uUnZy9ePH15zO/DXdG59WL602DkVjI4e3VxevZy+nzACw+dKIhFLXFJ
J4E/gPQhC+qWr2n/39rIC8xyjO7nU6YdEF1eqsY7cxYHzMnaoDbDMeTweNcs
2BW0UHAlM/IWNysUH+BdFMJE5bLUBXrht25tvQlyDz4G7Idit+IcJRK2f4ra
CyTaLBRLqkI7A56SxgtSCP/9+pXznNZqNp5J8r0JFEJyypLVMcNboP/rGVag
U2cnIpsJ2z5GwrIh6AGFJgm9rFL8UMyGzonaMxIs3LtZMfsTaEmFJiyMIt/t
s7m3FpXBijentKwKAziczcpeLKJAdVjCBNJhMZ3r0lTebyIv7YS94d9qJKtT
xnOrzvoir22rQmoA2WoSsQ77y9MLcRCvIYgdv8+LdX6wdt7gf/iYVwjvNv6Z
4rHv7k2BFN/dPeojRvgaxmgHh/Eh33tWGIjEe99x5LCuFxsP621sI+3Airt3
7oizv/LNaYJqewwuCQRb2XiKLsf4rNSXOp+I2zwGH8IWjC82K4jgA6If/Fqm
3/9qIDzjgR/cKgamJsd2ICZiQIufdLgAbD4vgjUBvZTp/L2BV9yNtw1RPjRR
Ig2F8HwAoNHKtwJ5uH/gIyNY7J0GPL0HhnSFgb17GV2EPqysr/ABJKLCXMLH
QQPmo7v8ObLf8S/JC7C+ZWOKFkktUChspwW+q3Ovnd+52++Q14BpKzKe5F23
A6N07BIH7Ie/uwHuQPB3jelpx4OjIExEK64MWHDr+s91BoLMroeN+5jeBAiI
AQ5cRY4+LWILUCx+UIkEHLwXMbd2kqF4CGTA2ThbTyKFL6W4rGEEcJxK2VlN
Mo2KfAnGjV1zAy6WYoiWZYhkZSnBIoEVRC+skoBfkWfsKOIwTulQ3BEkd7rh
Xq8yJgfqWM1lnVVgCnnTom+olG+ok5+Bo3+FCslZOe/oA5ihsYzDxJFVoNwY
okbuzNEtpOASqIVhRj6s/E61/PbGzfASJfZ0rGLeFsd6Q+P0TxeaZ419z4f9
VgVdSis3NzApCGeXUQGASxn6bdbxvKHxkBWKZdVjPDi2wbUHQRbmda5Uy0Y0
uuqGduKzLMW/tN9sG4ud5oLx2mIiyvmRPuol6HW7ux25dsQGCwc+TCP9QIbJ
9JPKW6ejO0foBoqTszcvjx3fOJXitKzdQ1RZdQWhxj9UGOhuIdJ2W0wxr9bo
Fy5Bz7ncBDoMJuArtUUH56yQRicm7NHCTbRJ+vd6s0ASSraBNT7qLJ3XCnmX
lS6vIuThr8hkNLoAo+6KCiE2qcB6CQeAbVJltrGJip2xcKPlm7TLaDc/oP65
VDl6wxnmt9VcQdyUkrPdHeqS9RGL7HXJ8TAHbM1PX0I8R02ClSgwOClezjXb
tyBh4wj8d9whiCTRLZrX2XY8aZMjG62y1AQQnrtMPRYgIsFJoCZZBbO9teUc
TPyxZUWic6piCAEBVmCC5FbEMQkWczAmEdNmqlZaHc0rxoqrukRrZDA1YGCd
LHsJOBa8R93MWNQbRVrfGeAyiphcxqyiy0BPOptMGSfPfPFAPCFzbWwmySrT
nhQXadtYnM5dDpbvSs0pCKJvm7wkPF0+h0CwiZzRYgIkiR5MTkWlwHb5bAeu
/RbVF3wu+wWnqMJbPbSZlcV7lN+Vy1OCZtMc+ZlKrUAAlAQGIGp7XgiylRRn
pwp8k4zrDpxdnhcookhsql1daVNTwFgqm71mZrblLM/7c3hpEom2OQg+329V
LP3n+77x1wL6w100CmTr0c0BbSUdvwDQN1taD347PzcEdPXlgL79rompCya2
H90UUF915rMB/f+ufRpQsJi/kdPZ+2gnIMZl16714dUD6I+bLa2D17WAdn7O
2eJ+PaBvhhF+OhzxOYB2kG38fQfQCRgErHL0fngjS+Ms0gtXUMZn/1sY7QS0
c9g/PbF3AvpDnKsMKzqNqXPx/v8RYn9aifUNI0A3VGKfXtofwNG23N9VQeEC
6Nobp8a5pWffFqP255sRu3/irbufVrU3QmDrc2NAn2KKHYB20vZzADWLae90
+9mNAF1bhf48QF+wNIgbbolz8PXF4aTLut0Wmu5dm6gwnbRp2KbT6WTDjoII
WyLLslhDzOxCCQgB5hrWLTh/0u4ack1l/S01ECLNFOcXGhSiJgFFKo8q+Rw+
2haktBlwJbNa2UgFiJ7aaWzE2+q5ihm/EwhQfaayr+KCL1IUuxUawDQ+R9S3
6/25tWuyae3aid/JuxPravVv4zQgFOcBKbLF3iIfKstLqXNTtRfngWAJolNw
7DSuNFNwrpJCUZswM5ZoTTaypxsJO4vEa3f/mGZaVUDSvR9fH+/z/FW7kakV
W0I0m2BXyqYnfcLvUXIFcHeMHWPV43TeYWbfV9Wglhf5GCtO1HnoluQK5Ylr
ScGwXe+OvrG3AlPDnO5ZyCvOFqg09jkHW0XG9drEQ1+TGcoBJze6yYTexiqA
Brt0TXNVw0b3Jr1uWkOlvjoj7aajFItTe9c9wbCwEYmgtEHtB5RRsIkB2One
3qj724gLK1Wnc8ochQDcBFIMS5UNrbhTitHzTCvthQrIukg2RcPFB+c2MQAn
M7VpuhNy9XvVpDMwgxILx/7oErsMmc2wa8YyRKtg/AnxbewATEuYQ/SQB7o4
GdIGbjqAp7BKRMoxqUsDbIndEXPAW6VYnKpz0OgdNdjyGIHkxQypiTxKippm
DkZ8JnEabjvaMj+2bzPMElqhoS4qm/BcrTi/280Ht29QqcThaFvd3Epsi47i
lBdTKw6ytATPvfti+pNLbjNT4VML0DYT0g5eyVLLWcblM7+TMH5RmGqcKSB9
U47yzcXY9EL5XGyoQAOirho9jjOhDqNecJ3UmSwJGimutk3aNpWt/lCuI/oO
USlQd6A+4dIcguPSO6bDZZsAwVpBEzbrDAtG3sS5+nlY3m43queGv4zrMhu7
SVp17t4S95ajxOXsj76DAOiNtU2nKEgStGkxxfNYnFHTk+WDrcw4wupX09RG
Rn03TWI929jeImRpz2vnG2CU3xmra9vlJTeVqoDK9BqxQIuHfWWHAMQoHVUg
nNK3cTJ/4uUMLJAaqzzJCtuIuzf48HGw77eOTqhge1b53gkScphxWtSCJMbx
zUdUdqpnptJVbUWRStut5lA/A2kFE0efpANaAf/WeCwGrl9hgN84Bc3yV/rq
m5X1oRs6JC0adq62rMiWQ0cAbZXELsiXMhqY1kt07byneCahWgzbFRGEFBRF
RnbhwvWRWScrQVUAW0u9h2ttsH0bHQcsgXENyrYQbc3fXRmXbmC3udpnSeGb
eMFkcm8z5uN5lxBrKvsGeKIiFkEhdabmaIbb5Gg0vNNsITHIkRwS45Dghguf
NetjL+XNxcn40ajpKPbocjMmcBo1sNU5ak3wKVKxd03haT/0XZGsYzfTykYi
NIw575XvCMUaiz39EbSRNitDzKwIljUptxnodb+LxIGA5CXHFEslSdKsvLQ2
jSFSVUi6xg+s8eXE4Vy2DHUIN4YblAVPcdsGW+cUFnTktrlvO8B0jtoJBAuH
8CL2R84dcg4ldg9e5gVXK63K7Cqf6Q8vT0ipGFvQcY1XdanHuGeknv8M+kT4
fToIN+1ArJJmQ/bpXUC+9e70+atnUxh5fPqX0wv4O4gH+P9fBn40rtKN/u73
B4fxg3v438Oj+OGdGL4+vAvX8M6eOLztoe+Lfw11B3eRf+WHmZOI7pDjfbDI
DT4MGoQHtsHKK5uxNwkw9PZeQ8SDBtD+12DZcQJ8Ie00X9XVBK/a0ShYXx7g
EJtsBaRooJuOMR59VlcWXt9omoJajnzCzFUi52JwulUzte1S1hUBLmlpxf7a
KQXmzvcNQyBbOXXhUWrP62SboDjtS5MRNikpp1NIylVFDH4YQ7xpT4t03ErS
eBpby/BxjsJMpnLE6ia0LCNL/kSuIBzqMSioY4bovw2deRR29jdm5/BRGADi
urGlPlTVWLP1Orjp8miqstaiM1XAiSNrDAqQRJU0md0Fq+isdpbpr7WpqDt+
0vSKfECkPgZ88q5pTwr5UURdfpwVs9ie1dvmyt18FrzKZ/7Y33ONHroV0MUc
ZniOtHHGRpwAPSJxfcn6moL1NqBV091hi9g3SEDbzLL99JWimxHX1ZhvOEv7
89k595uu5QXJWyCRnkD/LJj6fL779KRu7YgdOdkbzkIHDbqBGIb216Y4sSmF
Yn8+P8duHTdguuzakeXCKDwZCX6Ozd2QkW/Chm7uj6atNtRBQ0PDvptOpBpG
pVsBJSthe5iNm5bAf+EjRApP01R9RzHpUBTbUduUDnBcaDqxvvhtzohYFbPV
Dd096A+BI8aL7/jNRanm8Oq0b/2Wqja1hivHqG4O/zAMbI4ntthsRw4vbvNj
rybJfVslue5IcqYpREj4+wTXpLWtp/UZ8fMWQZoAGmkSvm03SMWfkXjuip5L
RJNEfHf3KADlQnEnAl2eDPNF34Al2xk7cmdvxEHdhINlIHcrYKIWwl+5yyGs
z9/kL0+SdBv/P3YVKecu8KAUH6V7YrMe3GEe/Rce7alNc9QuaT0PWjgriS1l
HBvaVm+/91HQbhlF02WBvgapA8doIz5xmFVe5T1GmoY1JQrO7MOH2JsWtiHi
VHqJziSeX74OW51f4dFxygd0ESPvFZuOVbolmeestEw0NZwBW8I4p8qM6/VO
MU2HjgL5u7mqRngSElsRC2MoLKPaEKj/pdR5BBKHQW/RNP4uaPZBUCFxU9BZ
2xZ5HtIBupA+CLyzXmtOcIcoYUo5HCB8WC/Ao2e7213X6HAzbtxrWi10mY6R
qzaYgUfCPcGjfva8TVO/OQcfEmVl78nZ6/P9qAvYbb6xaUcMCWaUjlSOYP6k
AfYsrg22b9cUPw/OIdyyEw6AwqCPNNLpXKl2waBLIkSlQ6eIc1w7KPSJhmBq
KHWk4JNIwp5E8iwD4GgdftEju9B20nqbOryBkT1aQr9VwqliTgWGC37Qt+AO
Pl/GIn0EiHoJIE6nL6ddNYJ0eanW4jmeX3ltz68IPIdlRHSNT9TSts/Dgy9s
NlbtmvPERx+32zOIPbIK+9eZhdYxq3cM4AX+FoDgc2LvwoNiTh/rcXPmid5w
pUr6QZ6+unBTW8Iz84gcTBdF4fbd49y/O+vqktjOSCINbFkVuQxtNkS7lxSY
dYi4lkYslLzSdAx2DvEguDoovZx9m9Uae77rFf62gXcnW9pkT6YQwbqubNe9
b/yPq+xjfgh9B1eRtbE8htgAxjKWxmJbhq3FOBfNbQ2kx0mDmlQ2Es04xYe/
m2M1PuGEP51D6Uq0wPxbPe7oDdUe0OI4aiibjwZm17Pa/zxDRBUVTDOvFwX9
SI5T1xjtu4ykO0/VSlNTgH6a+4whJ9U+iUZrQmchorn7XR6c0tHS2JNl1GRd
6itu+G4hEUf/A7rpTC4rSwAA

-->

</rfc>

